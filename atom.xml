<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>vkcyan</title>
  
  <subtitle>this is my life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-05T09:36:49.924Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>vkcyan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql思维导图</title>
    <link href="http://yoursite.com/2018/08/05/mysql%20%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    <id>http://yoursite.com/2018/08/05/mysql 思维导图/</id>
    <published>2018-08-04T16:00:00.000Z</published>
    <updated>2018-08-05T09:36:49.924Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://on7r0tqgu.bkt.clouddn.com/FupqmoAA1lwf_kL2HozhZ_M7bh8T.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://on7r0tqgu.bkt.clouddn.com/FupqmoAA1lwf_kL2HozhZ_M7bh8T.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql使用指南 - 进阶篇</title>
    <link href="http://yoursite.com/2018/08/05/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8C%87%E5%8D%97%20-%20%E8%BF%9B%E9%98%B6%E7%AF%87/"/>
    <id>http://yoursite.com/2018/08/05/mysql数据库指南 - 进阶篇/</id>
    <published>2018-08-04T16:00:00.000Z</published>
    <updated>2018-08-05T09:34:07.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="备份与恢复"><a href="#备份与恢复" class="headerlink" title="备份与恢复"></a>备份与恢复</h2><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><blockquote><p>备份数据库内容 并不是备份数据库</p></blockquote><h4 id="在Navicat-Premium里面"><a href="#在Navicat-Premium里面" class="headerlink" title="在Navicat Premium里面"></a>在Navicat Premium里面</h4><p>直接双击数据库 右击数据库点击-&gt; 转储sql文件 即可保存</p><h4 id="在命令行里面"><a href="#在命令行里面" class="headerlink" title="在命令行里面"></a>在命令行里面</h4><blockquote><p>将root用户的base表到导出到a盘名为a.sql的为文件里面</p><p>注意: 登录状态下无法进行操作!</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p000000 base&gt;A:/a.sql</span><br></pre></td></tr></table></figure><blockquote><p>mysqldump: [Warning] Using a password on the command line interface can be insecure.</p><p>可能出现这句话 这是警告说 在命令行使用密码不安全,可以忽略</p></blockquote><h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><h4 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h4><h5 id="没有登录的状态下"><a href="#没有登录的状态下" class="headerlink" title="没有登录的状态下"></a>没有登录的状态下</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p000000 base&lt;A:/a.sql</span><br></pre></td></tr></table></figure><h5 id="登录状态下"><a href="#登录状态下" class="headerlink" title="登录状态下"></a>登录状态下</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> base;</span><br><span class="line"><span class="keyword">use</span> base;</span><br><span class="line">source a:/a.sql;  //即为导入</span><br></pre></td></tr></table></figure><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><h3 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h3><p>主键约束: 唯一标识 <strong>非空</strong> <strong>唯一</strong> <strong>被引用</strong></p><p>当表的每一列被指定为主键的时候,该列不可以为空,不可以出现唯一的值</p><h4 id="创建表指定主键"><a href="#创建表指定主键" class="headerlink" title="创建表指定主键"></a>创建表指定主键</h4><h5 id="指定主键-方式1"><a href="#指定主键-方式1" class="headerlink" title="指定主键 - 方式1"></a>指定主键 - 方式1</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp (</span><br><span class="line">empno <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">ename <span class="built_in">varchar</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="指定主键-方式2"><a href="#指定主键-方式2" class="headerlink" title="指定主键 - 方式2"></a>指定主键 - 方式2</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp (</span><br><span class="line">    empno <span class="built_in">int</span>,</span><br><span class="line">    ename <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">    primary <span class="keyword">key</span>(empno)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>这个错误就是主键出现了重复的意思</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1062 (23000): Duplicate entry &apos;x&apos; for key &apos;PRIMARY&apos;</span><br></pre></td></tr></table></figure><h5 id="修改表时指定主键"><a href="#修改表时指定主键" class="headerlink" title="修改表时指定主键"></a>修改表时指定主键</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table emp (</span><br><span class="line">    empno int,</span><br><span class="line">    ename varchar(50)</span><br><span class="line">);</span><br><span class="line">alter table emp add primary key(empno);</span><br></pre></td></tr></table></figure><h4 id="删除主键"><a href="#删除主键" class="headerlink" title="删除主键"></a>删除主键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br></pre></td></tr></table></figure><h4 id="主键自增长"><a href="#主键自增长" class="headerlink" title="主键自增长"></a>主键自增长</h4><blockquote><p>auto_increment 类型必须int</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu (</span><br><span class="line">    <span class="keyword">sid</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    sname <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu <span class="keyword">values</span>(<span class="literal">null</span>,<span class="string">'haha'</span>,<span class="number">18</span>);</span><br></pre></td></tr></table></figure><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><blockquote><p>not null</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table stu (</span><br><span class="line">    sid int primary key auto_increment,</span><br><span class="line">    sname varchar(50) not null,</span><br><span class="line">    age int</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h3><blockquote><p>unique</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table stu (</span><br><span class="line">    sid int primary key auto_increment,</span><br><span class="line">    sname varchar(50) not null unique,</span><br><span class="line">    age int</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><h4 id="创建表添加外键约束"><a href="#创建表添加外键约束" class="headerlink" title="创建表添加外键约束"></a>创建表添加外键约束</h4><blockquote><p>外键必须是每一个表的主键的值(外键要引用主键)</p><p>外键可以重复</p><p>外键可以为空</p><p>一张表可以有多个外键</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//创建主表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept (</span><br><span class="line">deptno <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">dname <span class="built_in">varchar</span>(<span class="number">50</span>)</span><br><span class="line">)<span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line">//创建从表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp (</span><br><span class="line">empno <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">ename <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">don <span class="built_in">int</span>,</span><br><span class="line"><span class="keyword">constraint</span> wj_emp_dept foreign <span class="keyword">key</span>(don) <span class="keyword">references</span> dept(deptno)</span><br><span class="line">//约束 xxx(外键名称) 外键(don) 引用  dept表的deptno列</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="已创建的表添加外键约束"><a href="#已创建的表添加外键约束" class="headerlink" title="已创建的表添加外键约束"></a>已创建的表添加外键约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp (</span><br><span class="line">empno <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">ename <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">don <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> wj_emp_dept foreign <span class="keyword">key</span>(don) <span class="keyword">references</span> dept(deptno);</span><br><span class="line">改变 表 emp 添加 约束 (外键名称) 外键(don) 引用 dept表的deptno字段</span><br></pre></td></tr></table></figure><h4 id="已创建的表删除外键约束"><a href="#已创建的表删除外键约束" class="headerlink" title="已创建的表删除外键约束"></a>已创建的表删除外键约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> foreign <span class="keyword">key</span> wj_emp_dept;</span><br></pre></td></tr></table></figure><h3 id="一对一关系"><a href="#一对一关系" class="headerlink" title="一对一关系"></a>一对一关系</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//主表</span><br><span class="line">create table hasband (</span><br><span class="line">hid int primary key auto_increment,</span><br><span class="line">hname varchar(50)</span><br><span class="line">) default charset=utf8;</span><br><span class="line">//从表</span><br><span class="line">create table wife(</span><br><span class="line">wid int primary key auto_increment,</span><br><span class="line">wname varchar(50),</span><br><span class="line">constraint fk_wife_hasband foreign key(wid) references hasband(hid)</span><br><span class="line">) default charset=utf8;</span><br><span class="line">//这里的wid即是主键也是外键 一对一的关键</span><br><span class="line">/*</span><br><span class="line">1. 非空</span><br><span class="line">2. 唯一</span><br><span class="line">3. 引用hid</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="多对多关系"><a href="#多对多关系" class="headerlink" title="多对多关系"></a>多对多关系</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//创建主表</span><br><span class="line">create table student(</span><br><span class="line">sid int primary key auto_increment,</span><br><span class="line">sname varchar(50)</span><br><span class="line">);</span><br><span class="line">create table teacher(</span><br><span class="line">tid int primary key auto_increment,</span><br><span class="line">tname varchar(50)</span><br><span class="line">);</span><br><span class="line">//管理表</span><br><span class="line">create table stu_sea(</span><br><span class="line">sid int,</span><br><span class="line">tid int,</span><br><span class="line">constraint fk_student foreign key(sid) references student(sid),</span><br><span class="line">constraint fk_teacher foreign key(tid) references teacher(tid)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>多对多 两个主表 在创建中间表 最后将关系都写在中间表里面</p><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="合并结果集"><a href="#合并结果集" class="headerlink" title="合并结果集"></a>合并结果集</h3><blockquote><p>要求两个<strong>结果集</strong>(查询结果)完全相同</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">create table ab values(1,&apos;&apos;</span><br><span class="line">1)(;</span><br><span class="line">a int,</span><br><span class="line">b varchar(50)</span><br><span class="line">);</span><br><span class="line">insert into ab values(1,&apos;1&apos;);</span><br><span class="line">insert into ab values(2,&apos;2&apos;);</span><br><span class="line">insert into ab values(3,&apos;3&apos;);</span><br><span class="line">create table cd (</span><br><span class="line">c int,</span><br><span class="line">d varchar(50)</span><br><span class="line">);</span><br><span class="line">insert into cd values(3,&apos;3&apos;);</span><br><span class="line">insert into cd values(4,&apos;4&apos;);</span><br><span class="line">insert into cd values(5,&apos;5&apos;);</span><br><span class="line"></span><br><span class="line">//合并结果集 (表头由第一个查询的表定)</span><br><span class="line">select * from ab union all select * from cd;</span><br><span class="line">+------+------+</span><br><span class="line">| a    | b    |</span><br><span class="line">+------+------+</span><br><span class="line">|    1 | 1    |</span><br><span class="line">|    2 | 2    |</span><br><span class="line">|    3 | 3    |</span><br><span class="line">|    3 | 3    |</span><br><span class="line">|    4 | 4    |</span><br><span class="line">|    5 | 5    |</span><br><span class="line">+------+------+</span><br><span class="line">//不加all会将重复的过滤掉</span><br><span class="line">mysql&gt; select * from ab union select * from cd;</span><br><span class="line">+------+------+</span><br><span class="line">| a    | b    |</span><br><span class="line">+------+------+</span><br><span class="line">|    1 | 1    |</span><br><span class="line">|    2 | 2    |</span><br><span class="line">|    3 | 3    |</span><br><span class="line">|    4 | 4    |</span><br><span class="line">|    5 | 5    |</span><br><span class="line">+------+------+</span><br></pre></td></tr></table></figure><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><h4 id="方言"><a href="#方言" class="headerlink" title="方言"></a>方言</h4><blockquote><p>格式: <strong>select * from 表1 as 别名1,表2 as 别名2 where 别名1.xx=别名2.xx</strong></p></blockquote><p>笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp,dept; </span><br><span class="line">//会emp每一列与dept表连接</span><br></pre></td></tr></table></figure><blockquote><p>添加条件 去除不匹配数据</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp,dept where emp.deptno = dept.deptno;</span><br></pre></td></tr></table></figure><blockquote><p>打印指定数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select emp.ename,emp.sal,dept.dname from emp,dept where emp.deptno = dept.deptno;</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br><span class="line">| ename  | sal      | dname  |</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br><span class="line">| 甘宁   |  8000.00 | 学工部 |</span><br><span class="line">| 黛绮丝 | 16000.00 | 销售部 |</span><br><span class="line">| 殷天正 | 12500.00 | 销售部 |</span><br><span class="line">| 刘备   | 29750.00 | 学工部 |</span><br><span class="line">| 谢逊   | 12500.00 | 销售部 |</span><br><span class="line">| 关羽   | 28500.00 | 销售部 |</span><br><span class="line">| 张飞   | 24500.00 | 教研部 |</span><br><span class="line">| 诸葛亮 | 30000.00 | 学工部 |</span><br><span class="line">| 曾阿牛 | 50000.00 | 教研部 |</span><br><span class="line">| 韦一笑 | 15000.00 | 销售部 |</span><br><span class="line">| 周泰   | 11000.00 | 学工部 |</span><br><span class="line">| 程普   |  9500.00 | 销售部 |</span><br><span class="line">| 庞统   | 30000.00 | 学工部 |</span><br><span class="line">| 黄盖   | 13000.00 | 教研部 |</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br></pre></td></tr></table></figure><blockquote><p>给表起别名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.sal,d.dname <span class="keyword">from</span> emp <span class="keyword">as</span> e,dept <span class="keyword">as</span> d <span class="keyword">where</span> e.deptno = d.deptno;</span><br></pre></td></tr></table></figure><h4 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h4><blockquote><p>inner join</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.sal,d.dname <span class="keyword">from</span> emp <span class="keyword">as</span> e <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">as</span> d <span class="keyword">on</span> e.deptno = d.deptno;</span><br></pre></td></tr></table></figure><h4 id="自然"><a href="#自然" class="headerlink" title="自然"></a>自然</h4><blockquote><p> natural join 标准的简化写法 自动匹配相同的字段</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.sal,d.dname <span class="keyword">from</span> emp <span class="keyword">as</span> e <span class="keyword">natural</span> <span class="keyword">join</span> dept d;</span><br></pre></td></tr></table></figure><h5 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h5><blockquote><p>外连接有一主一次 左外即左表为主</p><p>这里以emp表为主,name主表中所有记录都无论条件是否满足,都会打印出来</p><p>不满足条件会用null作为右表的补位</p></blockquote><h6 id="左连接"><a href="#左连接" class="headerlink" title="左连接"></a>左连接</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.sal,d.dname </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">as</span> e <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept d </span><br><span class="line"><span class="keyword">on</span> e.deptno=d.deptno;</span><br></pre></td></tr></table></figure><h6 id="右链接"><a href="#右链接" class="headerlink" title="右链接"></a>右链接</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.sal,d.dname</span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">as</span> e <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept d</span><br><span class="line"><span class="keyword">on</span> e.deptno=d.deptno;</span><br></pre></td></tr></table></figure><blockquote><p>假如决定null数据不合适可以使用ifnull去替换</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">ifnull</span>(e.ename,<span class="string">'无员工'</span>) ename,e.sal,d.dname <span class="keyword">from</span> emp <span class="keyword">as</span> e <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno=d.deptno;</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br><span class="line">| ename  | sal      | dname  |</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br><span class="line">| 甘宁   |  8000.00 | 学工部 |</span><br><span class="line">| 黛绮丝 | 16000.00 | 销售部 |</span><br><span class="line">| 殷天正 | 12500.00 | 销售部 |</span><br><span class="line">| 刘备   | 29750.00 | 学工部 |</span><br><span class="line">| 谢逊   | 12500.00 | 销售部 |</span><br><span class="line">| 关羽   | 28500.00 | 销售部 |</span><br><span class="line">| 张飞   | 24500.00 | 教研部 |</span><br><span class="line">| 诸葛亮 | 30000.00 | 学工部 |</span><br><span class="line">| 曾阿牛 | 50000.00 | 教研部 |</span><br><span class="line">| 韦一笑 | 15000.00 | 销售部 |</span><br><span class="line">| 周泰   | 11000.00 | 学工部 |</span><br><span class="line">| 程普   |  9500.00 | 销售部 |</span><br><span class="line">| 庞统   | 30000.00 | 学工部 |</span><br><span class="line">| 黄盖   | 13000.00 | 教研部 |</span><br><span class="line">| 无员工 |     NULL | 财务部 |</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br></pre></td></tr></table></figure><h6 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h6><blockquote><p>使用关键字 union合并结果集</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select e.ename,e.sal,d.dname </span><br><span class="line">from emp as e left outer join dept d </span><br><span class="line">on e.deptno=d.deptno</span><br><span class="line">union</span><br><span class="line">select e.ename,e.sal,d.dname</span><br><span class="line">from emp as e right outer join dept d</span><br><span class="line">on e.deptno=d.deptno;</span><br></pre></td></tr></table></figure><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><blockquote><p>查询sal字段最高的行的详细信息</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from emp where sal=(select max(sal) from emp);</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">|  1009 | 曾阿牛 | 董事长 | NULL | 2001-11-17 | 50000.00 | NULL |     10 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br></pre></td></tr></table></figure><h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建部门表*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(</span><br><span class="line">deptno<span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">dname<span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">loc <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">) <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建雇员表*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp(</span><br><span class="line">empno<span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">ename<span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">job<span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">mgr<span class="built_in">INT</span>,</span><br><span class="line">hiredate<span class="built_in">DATE</span>,</span><br><span class="line">sal<span class="built_in">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>),</span><br><span class="line">COMM <span class="built_in">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>),</span><br><span class="line">deptno<span class="built_in">INT</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_emp FOREIGN <span class="keyword">KEY</span>(mgr) <span class="keyword">REFERENCES</span> emp(empno)</span><br><span class="line">) <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建工资等级表*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salgrade(</span><br><span class="line">grade<span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">losal<span class="built_in">INT</span>,</span><br><span class="line">hisal<span class="built_in">INT</span></span><br><span class="line">) <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"><span class="comment">/*插入dept表数据*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">'教研部'</span>, <span class="string">'北京'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">20</span>, <span class="string">'学工部'</span>, <span class="string">'上海'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">30</span>, <span class="string">'销售部'</span>, <span class="string">'广州'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">40</span>, <span class="string">'财务部'</span>, <span class="string">'武汉'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*插入emp表数据*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1009</span>, <span class="string">'曾阿牛'</span>, <span class="string">'董事长'</span>, <span class="literal">NULL</span>, <span class="string">'2001-11-17'</span>, <span class="number">50000</span>, <span class="literal">NULL</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1004</span>, <span class="string">'刘备'</span>, <span class="string">'经理'</span>, <span class="number">1009</span>, <span class="string">'2001-04-02'</span>, <span class="number">29750</span>, <span class="literal">NULL</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1006</span>, <span class="string">'关羽'</span>, <span class="string">'经理'</span>, <span class="number">1009</span>, <span class="string">'2001-05-01'</span>, <span class="number">28500</span>, <span class="literal">NULL</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1007</span>, <span class="string">'张飞'</span>, <span class="string">'经理'</span>, <span class="number">1009</span>, <span class="string">'2001-09-01'</span>, <span class="number">24500</span>, <span class="literal">NULL</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1008</span>, <span class="string">'诸葛亮'</span>, <span class="string">'分析师'</span>, <span class="number">1004</span>, <span class="string">'2007-04-19'</span>, <span class="number">30000</span>, <span class="literal">NULL</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1013</span>, <span class="string">'庞统'</span>, <span class="string">'分析师'</span>, <span class="number">1004</span>, <span class="string">'2001-12-03'</span>, <span class="number">30000</span>, <span class="literal">NULL</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1002</span>, <span class="string">'黛绮丝'</span>, <span class="string">'销售员'</span>, <span class="number">1006</span>, <span class="string">'2001-02-20'</span>, <span class="number">16000</span>, <span class="number">3000</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1003</span>, <span class="string">'殷天正'</span>, <span class="string">'销售员'</span>, <span class="number">1006</span>, <span class="string">'2001-02-22'</span>, <span class="number">12500</span>, <span class="number">5000</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1005</span>, <span class="string">'谢逊'</span>, <span class="string">'销售员'</span>, <span class="number">1006</span>, <span class="string">'2001-09-28'</span>, <span class="number">12500</span>, <span class="number">14000</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1010</span>, <span class="string">'韦一笑'</span>, <span class="string">'销售员'</span>, <span class="number">1006</span>, <span class="string">'2001-09-08'</span>, <span class="number">15000</span>, <span class="number">0</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1012</span>, <span class="string">'程普'</span>, <span class="string">'文员'</span>, <span class="number">1006</span>, <span class="string">'2001-12-03'</span>, <span class="number">9500</span>, <span class="literal">NULL</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1014</span>, <span class="string">'黄盖'</span>, <span class="string">'文员'</span>, <span class="number">1007</span>, <span class="string">'2002-01-23'</span>, <span class="number">13000</span>, <span class="literal">NULL</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1011</span>, <span class="string">'周泰'</span>, <span class="string">'文员'</span>, <span class="number">1008</span>, <span class="string">'2007-05-23'</span>, <span class="number">11000</span>, <span class="literal">NULL</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1001</span>, <span class="string">'甘宁'</span>, <span class="string">'文员'</span>, <span class="number">1013</span>, <span class="string">'2000-12-17'</span>, <span class="number">8000</span>, <span class="literal">NULL</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*插入salgrade表数据*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salgrade <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">7000</span>, <span class="number">12000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salgrade <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">12010</span>, <span class="number">14000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salgrade <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="number">14010</span>, <span class="number">20000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salgrade <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="number">20010</span>, <span class="number">30000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salgrade <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="number">30010</span>, <span class="number">99990</span>);</span><br></pre></td></tr></table></figure><h5 id="查询至少有一个员工的部门-显示部门编号-部门名称-部门位置-部门人数"><a href="#查询至少有一个员工的部门-显示部门编号-部门名称-部门位置-部门人数" class="headerlink" title="查询至少有一个员工的部门,显示部门编号,部门名称,部门位置,部门人数"></a>查询至少有一个员工的部门,显示部门编号,部门名称,部门位置,部门人数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> d.*,z1.cou</span><br><span class="line"><span class="keyword">from</span> dept d,(<span class="keyword">select</span> deptno,<span class="keyword">count</span>(*) cou <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) z1  //笛卡尔积</span><br><span class="line"><span class="keyword">where</span> d.deptno=z1.deptno;</span><br></pre></td></tr></table></figure><h5 id="列出所有员工的姓名及其直接上司的名字"><a href="#列出所有员工的姓名及其直接上司的名字" class="headerlink" title="列出所有员工的姓名及其直接上司的名字"></a>列出所有员工的姓名及其直接上司的名字</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//首先使用笛卡尔积来统一匹配</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp e,emp p;</span><br><span class="line">在去把员工的上司编号与上司编号去匹配 加个别名</span><br><span class="line"><span class="keyword">select</span> e.ename <span class="keyword">as</span> <span class="string">'上司'</span>,p.ename <span class="keyword">as</span> <span class="string">'员工'</span> <span class="keyword">from</span> emp e,emp p <span class="keyword">where</span> e.empno=p.mgr;</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| 上司   | 员工   |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| 庞统   | 甘宁   |</span><br><span class="line">| 关羽   | 黛绮丝 |</span><br><span class="line">| 关羽   | 殷天正 |</span><br><span class="line">| 曾阿牛 | 刘备   |</span><br><span class="line">| 关羽   | 谢逊   |</span><br><span class="line">| 曾阿牛 | 关羽   |</span><br><span class="line">| 曾阿牛 | 张飞   |</span><br><span class="line">| 刘备   | 诸葛亮 |</span><br><span class="line">| 关羽   | 韦一笑 |</span><br><span class="line">| 诸葛亮 | 周泰   |</span><br><span class="line">| 关羽   | 程普   |</span><br><span class="line">| 刘备   | 庞统   |</span><br><span class="line">| 张飞   | 黄盖   |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br></pre></td></tr></table></figure><h5 id="列出受雇日期早于直接上级的所有员工及编号-姓名-部门"><a href="#列出受雇日期早于直接上级的所有员工及编号-姓名-部门" class="headerlink" title="列出受雇日期早于直接上级的所有员工及编号.姓名,部门"></a>列出受雇日期早于直接上级的所有员工及编号.姓名,部门</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">//首先 列出所有员工受雇时间,员工编号 和领导受雇时间</span><br><span class="line"><span class="keyword">select</span> e.empno,e.ename,e.hiredate,p.ename,p.hiredate <span class="keyword">from</span> emp e,emp p <span class="keyword">where</span> e.mgr=p.empno;</span><br><span class="line">+<span class="comment">-------+--------+------------+--------+------------+</span></span><br><span class="line">| empno | ename  | hiredate   | ename  | hiredate   |</span><br><span class="line">+<span class="comment">-------+--------+------------+--------+------------+</span></span><br><span class="line">|  1001 | 甘宁   | 2000-12-17 | 庞统   | 2001-12-03 |</span><br><span class="line">|  1002 | 黛绮丝 | 2001-02-20 | 关羽   | 2001-05-01 |</span><br><span class="line">|  1003 | 殷天正 | 2001-02-22 | 关羽   | 2001-05-01 |</span><br><span class="line">|  1004 | 刘备   | 2001-04-02 | 曾阿牛 | 2001-11-17 |</span><br><span class="line">|  1005 | 谢逊   | 2001-09-28 | 关羽   | 2001-05-01 |</span><br><span class="line">|  1006 | 关羽   | 2001-05-01 | 曾阿牛 | 2001-11-17 |</span><br><span class="line">|  1007 | 张飞   | 2001-09-01 | 曾阿牛 | 2001-11-17 |</span><br><span class="line">|  1008 | 诸葛亮 | 2007-04-19 | 刘备   | 2001-04-02 |</span><br><span class="line">|  1010 | 韦一笑 | 2001-09-08 | 关羽   | 2001-05-01 |</span><br><span class="line">|  1011 | 周泰   | 2007-05-23 | 诸葛亮 | 2007-04-19 |</span><br><span class="line">|  1012 | 程普   | 2001-12-03 | 关羽   | 2001-05-01 |</span><br><span class="line">|  1013 | 庞统   | 2001-12-03 | 刘备   | 2001-04-02 |</span><br><span class="line">|  1014 | 黄盖   | 2002-01-23 | 张飞   | 2001-09-01 |</span><br><span class="line">+<span class="comment">-------+--------+------------+--------+------------+</span></span><br><span class="line">//将受雇时间早于上级的过滤下来</span><br><span class="line"><span class="keyword">select</span> e.empno,e.ename,e.hiredate,p.ename,p.hiredate <span class="keyword">from</span> emp e,emp p <span class="keyword">where</span> e.mgr=p.empno <span class="keyword">and</span> e.hiredate&lt;p.hiredate;</span><br><span class="line">+<span class="comment">-------+--------+------------+--------+------------+</span></span><br><span class="line">| empno | ename  | hiredate   | ename  | hiredate   |</span><br><span class="line">+<span class="comment">-------+--------+------------+--------+------------+</span></span><br><span class="line">|  1001 | 甘宁   | 2000-12-17 | 庞统   | 2001-12-03 |</span><br><span class="line">|  1002 | 黛绮丝 | 2001-02-20 | 关羽   | 2001-05-01 |</span><br><span class="line">|  1003 | 殷天正 | 2001-02-22 | 关羽   | 2001-05-01 |</span><br><span class="line">|  1004 | 刘备   | 2001-04-02 | 曾阿牛 | 2001-11-17 |</span><br><span class="line">|  1006 | 关羽   | 2001-05-01 | 曾阿牛 | 2001-11-17 |</span><br><span class="line">|  1007 | 张飞   | 2001-09-01 | 曾阿牛 | 2001-11-17 |</span><br><span class="line">+<span class="comment">-------+--------+------------+--------+------------+</span></span><br><span class="line">//最后获取部门名称  判断人员表的部门号与部门表的部门号匹配即可 把没用的去掉</span><br><span class="line">mysql&gt; select e.empno '编号',e.ename '员工',d.dname '部门' from emp e,emp p,dept d whe</span><br><span class="line">re e.mgr=p.empno and e.hiredate&lt;p.hiredate and e.deptno=d.deptno;</span><br><span class="line">+<span class="comment">------+--------+--------+</span></span><br><span class="line">| 编号 | 员工   | 部门   |</span><br><span class="line">+<span class="comment">------+--------+--------+</span></span><br><span class="line">| 1001 | 甘宁   | 学工部 |</span><br><span class="line">| 1002 | 黛绮丝 | 销售部 |</span><br><span class="line">| 1003 | 殷天正 | 销售部 |</span><br><span class="line">| 1004 | 刘备   | 学工部 |</span><br><span class="line">| 1006 | 关羽   | 销售部 |</span><br><span class="line">| 1007 | 张飞   | 教研部 |</span><br><span class="line">+<span class="comment">------+--------+--------+</span></span><br></pre></td></tr></table></figure><h5 id="列出部门名称和这些部门的员工信息-同时列出没有员工的部门"><a href="#列出部门名称和这些部门的员工信息-同时列出没有员工的部门" class="headerlink" title="列出部门名称和这些部门的员工信息 同时列出没有员工的部门"></a>列出部门名称和这些部门的员工信息 同时列出没有员工的部门</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">//首先获取员工信息对应的部门名称</span><br><span class="line">mysql&gt; select e.*,d.dname from dept d,emp e where e.deptno=d.deptno;</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM     | deptno | dname  |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+--------+</span></span><br><span class="line">|  1001 | 甘宁   | 文员   | 1013 | 2000-12-17 |  8000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1002 | 黛绮丝 | 销售员 | 1006 | 2001-02-20 | 16000.00 |  3000.00 |     30 | 销售部 |</span><br><span class="line">|  1003 | 殷天正 | 销售员 | 1006 | 2001-02-22 | 12500.00 |  5000.00 |     30 | 销售部 |</span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1005 | 谢逊   | 销售员 | 1006 | 2001-09-28 | 12500.00 | 14000.00 |     30 | 销售部 |</span><br><span class="line">|  1006 | 关羽   | 经理   | 1009 | 2001-05-01 | 28500.00 |     NULL |     30 | 销售部 |</span><br><span class="line">|  1007 | 张飞   | 经理   | 1009 | 2001-09-01 | 24500.00 |     NULL |     10 | 教研部 |</span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1009 | 曾阿牛 | 董事长 | NULL | 2001-11-17 | 50000.00 |     NULL |     10 | 教研部 |</span><br><span class="line">|  1010 | 韦一笑 | 销售员 | 1006 | 2001-09-08 | 15000.00 |     0.00 |     30 | 销售部 |</span><br><span class="line">|  1011 | 周泰   | 文员   | 1008 | 2007-05-23 | 11000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1012 | 程普   | 文员   | 1006 | 2001-12-03 |  9500.00 |     NULL |     30 | 销售部 |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1014 | 黄盖   | 文员   | 1007 | 2002-01-23 | 13000.00 |     NULL |     10 | 教研部 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+--------+</span></span><br><span class="line">//这里要求没用员工的部门也列出来,随意要使用右连接</span><br><span class="line">mysql&gt; select e.*,d.dname from emp e right outer join dept d on e.deptno=d.deptno;</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM     | deptno | dname  |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+--------+</span></span><br><span class="line">|  1001 | 甘宁   | 文员   | 1013 | 2000-12-17 |  8000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1002 | 黛绮丝 | 销售员 | 1006 | 2001-02-20 | 16000.00 |  3000.00 |     30 | 销售部 |</span><br><span class="line">|  1003 | 殷天正 | 销售员 | 1006 | 2001-02-22 | 12500.00 |  5000.00 |     30 | 销售部 |</span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1005 | 谢逊   | 销售员 | 1006 | 2001-09-28 | 12500.00 | 14000.00 |     30 | 销售部 |</span><br><span class="line">|  1006 | 关羽   | 经理   | 1009 | 2001-05-01 | 28500.00 |     NULL |     30 | 销售部 |</span><br><span class="line">|  1007 | 张飞   | 经理   | 1009 | 2001-09-01 | 24500.00 |     NULL |     10 | 教研部 |</span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1009 | 曾阿牛 | 董事长 | NULL | 2001-11-17 | 50000.00 |     NULL |     10 | 教研部 |</span><br><span class="line">|  1010 | 韦一笑 | 销售员 | 1006 | 2001-09-08 | 15000.00 |     0.00 |     30 | 销售部 |</span><br><span class="line">|  1011 | 周泰   | 文员   | 1008 | 2007-05-23 | 11000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1012 | 程普   | 文员   | 1006 | 2001-12-03 |  9500.00 |     NULL |     30 | 销售部 |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 |     NULL |     20 | 学工部 |</span><br><span class="line">|  1014 | 黄盖   | 文员   | 1007 | 2002-01-23 | 13000.00 |     NULL |     10 | 教研部 |</span><br><span class="line">|  NULL | NULL   | NULL   | NULL | NULL       |     NULL |     NULL |   NULL | 财务部 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+--------+</span></span><br></pre></td></tr></table></figure><h5 id="列出薪资大于15000的各种工作以及从事此工作的员工人数"><a href="#列出薪资大于15000的各种工作以及从事此工作的员工人数" class="headerlink" title="列出薪资大于15000的各种工作以及从事此工作的员工人数"></a>列出薪资大于15000的各种工作以及从事此工作的员工人数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//首先获取各种工作</span><br><span class="line"><span class="keyword">select</span> job,<span class="keyword">count</span>(*) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job;</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">| job    | count(*) |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">| 分析师 |        2 |</span><br><span class="line">| 文员   |        4 |</span><br><span class="line">| 经理   |        3 |</span><br><span class="line">| 董事长 |        1 |</span><br><span class="line">| 销售员 |        4 |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">这里列出薪资大于15000,是对分组后的人进行条件查询,所以使用having</span><br><span class="line"><span class="keyword">select</span> job,<span class="keyword">count</span>(*) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> <span class="keyword">min</span>(sal) &gt;<span class="number">15000</span>;</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">| job    | count(*) |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">| 分析师 |        2 |</span><br><span class="line">| 经理   |        3 |</span><br><span class="line">| 董事长 |        1 |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br></pre></td></tr></table></figure><h5 id="列出在销售部工作的员工姓名-不能通过员工编号获取"><a href="#列出在销售部工作的员工姓名-不能通过员工编号获取" class="headerlink" title="列出在销售部工作的员工姓名,不能通过员工编号获取"></a>列出在销售部工作的员工姓名,不能通过员工编号获取</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//假设知道员工编号</span><br><span class="line">mysql&gt; select ename,deptno from emp where deptno='30';</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| ename  | deptno |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| 黛绮丝 |     30 |</span><br><span class="line">| 殷天正 |     30 |</span><br><span class="line">| 谢逊   |     30 |</span><br><span class="line">| 关羽   |     30 |</span><br><span class="line">| 韦一笑 |     30 |</span><br><span class="line">| 程普   |     30 |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">//这里通过子查询去dept表获取销售部的编号</span><br><span class="line">mysql&gt; select ename from emp where deptno=(select deptno from dept where dname='销售部');</span><br><span class="line">+<span class="comment">--------+ </span></span><br><span class="line">| ename  | </span><br><span class="line">+<span class="comment">--------+ </span></span><br><span class="line">| 黛绮丝 |    </span><br><span class="line">| 殷天正 |    </span><br><span class="line">| 谢逊   |   </span><br><span class="line">| 关羽   |   </span><br><span class="line">| 韦一笑 |    </span><br><span class="line">| 程普   |   </span><br><span class="line">+<span class="comment">--------+</span></span><br></pre></td></tr></table></figure><h5 id="列出薪资高于平均薪资的员工信息-所在部门-上级领导-工资等级"><a href="#列出薪资高于平均薪资的员工信息-所在部门-上级领导-工资等级" class="headerlink" title="列出薪资高于平均薪资的员工信息,所在部门,上级领导,工资等级"></a>列出薪资高于平均薪资的员工信息,所在部门,上级领导,工资等级</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">//首先查出高于平均工资的</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal&gt;(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 | NULL |     20 |</span><br><span class="line">|  1006 | 关羽   | 经理   | 1009 | 2001-05-01 | 28500.00 | NULL |     30 |</span><br><span class="line">|  1007 | 张飞   | 经理   | 1009 | 2001-09-01 | 24500.00 | NULL |     10 |</span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 | NULL |     20 |</span><br><span class="line">|  1009 | 曾阿牛 | 董事长 | NULL | 2001-11-17 | 50000.00 | NULL |     10 |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 | NULL |     20 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">//加上部门名称</span><br><span class="line"><span class="keyword">select</span> e.*,d.dname </span><br><span class="line"><span class="keyword">from</span> emp e,dept d </span><br><span class="line"><span class="keyword">where</span> sal&gt;(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp) <span class="keyword">and</span> e.deptno=d.deptno;</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno | dname  |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+</span></span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 | NULL |     20 | 学工部 |</span><br><span class="line">|  1006 | 关羽   | 经理   | 1009 | 2001-05-01 | 28500.00 | NULL |     30 | 销售部 |</span><br><span class="line">|  1007 | 张飞   | 经理   | 1009 | 2001-09-01 | 24500.00 | NULL |     10 | 教研部 |</span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 | NULL |     20 | 学工部 |</span><br><span class="line">|  1009 | 曾阿牛 | 董事长 | NULL | 2001-11-17 | 50000.00 | NULL |     10 | 教研部 |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 | NULL |     20 | 学工部 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+</span></span><br><span class="line">//加上级领导</span><br><span class="line"><span class="keyword">select</span> e.*,d.dname,p.ename</span><br><span class="line"><span class="keyword">from</span> emp e,dept d,emp p</span><br><span class="line"><span class="keyword">where</span> e.sal&gt;(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp) <span class="keyword">and</span> e.deptno=d.deptno <span class="keyword">and</span> e.mgr=p.empno;</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno | dname  | ename  |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+</span></span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 | NULL |     20 | 学工部 | 曾阿牛 |</span><br><span class="line">|  1006 | 关羽   | 经理   | 1009 | 2001-05-01 | 28500.00 | NULL |     30 | 销售部 | 曾阿牛 |</span><br><span class="line">|  1007 | 张飞   | 经理   | 1009 | 2001-09-01 | 24500.00 | NULL |     10 | 教研部 | 曾阿牛 |</span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 | NULL |     20 | 学工部 | 刘备   |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 | NULL |     20 | 学工部 | 刘备   |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+</span></span><br><span class="line">//加薪资等级</span><br><span class="line"><span class="keyword">select</span> e.*,d.dname,p.ename,s.grade <span class="string">'薪资等级'</span></span><br><span class="line"><span class="keyword">from</span> emp e,dept d,emp p,salgrade s</span><br><span class="line"><span class="keyword">where</span> e.sal&gt;(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp) <span class="keyword">and</span> e.deptno=d.deptno <span class="keyword">and</span> e.mgr=p.empno <span class="keyword">and</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+----------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno | dname  | ename  | 薪资等级 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+----------+</span></span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 | NULL |     20 | 学工部 | 曾阿牛 |        4 |</span><br><span class="line">|  1006 | 关羽   | 经理   | 1009 | 2001-05-01 | 28500.00 | NULL |     30 | 销售部 | 曾阿牛 |        4 |</span><br><span class="line">|  1007 | 张飞   | 经理   | 1009 | 2001-09-01 | 24500.00 | NULL |     10 | 教研部 | 曾阿牛 |        4 |</span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 | NULL |     20 | 学工部 | 刘备   |        4 |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 | NULL |     20 | 学工部 | 刘备   |        4 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+----------+</span></span><br><span class="line">//最后把高于平均薪资的员工信息,但是因为上级领导被过滤掉的通过左连接显示出来</span><br><span class="line"><span class="keyword">select</span> e.*,d.dname,p.ename,s.grade <span class="string">'薪资等级'</span></span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">emp e <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno=d.deptno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp p <span class="keyword">on</span> e.mgr=p.empno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> salgrade s <span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal</span><br><span class="line"><span class="keyword">where</span> e.sal&gt;(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+----------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno | dname  | ename  | 薪资等级 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+----------+</span></span><br><span class="line">|  1007 | 张飞   | 经理   | 1009 | 2001-09-01 | 24500.00 | NULL |     10 | 教研部 | 曾阿牛 |        4 |</span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 | NULL |     20 | 学工部 | 曾阿牛 |        4 |</span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 | NULL |     20 | 学工部 | 刘备   |        4 |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 | NULL |     20 | 学工部 | 刘备   |        4 |</span><br><span class="line">|  1006 | 关羽   | 经理   | 1009 | 2001-05-01 | 28500.00 | NULL |     30 | 销售部 | 曾阿牛 |        4 |</span><br><span class="line">|  1009 | 曾阿牛 | 董事长 | NULL | 2001-11-17 | 50000.00 | NULL |     10 | 教研部 | NULL   |        5 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+--------+----------+</span></span><br></pre></td></tr></table></figure><h5 id="列出与庞统从事相同工作的所有员工及部门名称"><a href="#列出与庞统从事相同工作的所有员工及部门名称" class="headerlink" title="列出与庞统从事相同工作的所有员工及部门名称"></a>列出与庞统从事相同工作的所有员工及部门名称</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//首先获取与庞统从事相同工作的所有员工</span><br><span class="line">mysql&gt; select * from emp  where job=(select job from emp where ename='庞统');</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 | NULL |     20  |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 | NULL |     20  |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+</span></span><br><span class="line">//查询部门</span><br><span class="line"><span class="keyword">select</span> e.*,d.dname <span class="keyword">from</span> emp e,dept d <span class="keyword">where</span> job=(<span class="keyword">select</span> job <span class="keyword">from</span> emp <span class="keyword">where</span> ename=<span class="string">'庞统'</span>) <span class="keyword">and</span> e.deptno=d.deptno;</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+</span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM | deptno | dname  |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+</span></span><br><span class="line">|  1008 | 诸葛亮 | 分析师 | 1004 | 2007-04-19 | 30000.00 | NULL |     20 | 学工部 |</span><br><span class="line">|  1013 | 庞统   | 分析师 | 1004 | 2001-12-03 | 30000.00 | NULL |     20 | 学工部 |</span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+------+--------+--------+</span></span><br></pre></td></tr></table></figure><h5 id="列出薪资高于30部门的所有员工的姓名-薪资-部门名称"><a href="#列出薪资高于30部门的所有员工的姓名-薪资-部门名称" class="headerlink" title="列出薪资高于30部门的所有员工的姓名,薪资,部门名称"></a>列出薪资高于30部门的所有员工的姓名,薪资,部门名称</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select e.ename,e.sal,d.dname from emp e,dept d where e.deptno=d.deptno and sal&gt; (select max(sal) from emp where deptno='30');</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br><span class="line">| ename  | sal      | dname  |</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br><span class="line">| 刘备   | 29750.00 | 学工部 |</span><br><span class="line">| 诸葛亮 | 30000.00 | 学工部 |</span><br><span class="line">| 曾阿牛 | 50000.00 | 教研部 |</span><br><span class="line">| 庞统   | 30000.00 | 学工部 |</span><br><span class="line">+<span class="comment">--------+----------+--------+</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;备份与恢复&quot;&gt;&lt;a href=&quot;#备份与恢复&quot; class=&quot;headerlink&quot; title=&quot;备份与恢复&quot;&gt;&lt;/a&gt;备份与恢复&lt;/h2&gt;&lt;h3 id=&quot;备份&quot;&gt;&lt;a href=&quot;#备份&quot; class=&quot;headerlink&quot; title=&quot;备份&quot;&gt;&lt;/a&gt;备
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>对第一次使用mpvue的一次记录</title>
    <link href="http://yoursite.com/2018/08/04/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8mpvue%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/08/04/第一次使用mpvue的记录/</id>
    <published>2018-08-03T16:00:00.000Z</published>
    <updated>2018-08-05T12:36:23.312Z</updated>
    
    <content type="html"><![CDATA[<p>​    昨晚睡前打开了半个月没打开的知乎, 看到了一个专栏文章<a href="https://zhuanlan.zhihu.com/p/40739079" target="_blank" rel="noopener">再见jquery,我的老朋友</a>,突然想到之前github传出,github已经彻底删除jquery,这似乎标志着前端已经完全进入了一个新的时代,js从最开始的小丑云,现在已经成为一个非常优秀的编程语言,开发者的目光从兼容性一步步的转向了模块化</p><p>​    前端发展如此之快,作为前端开发者对前端快速发展欣喜的同时,让我倍感压力,不能停止学习,废话就说这么多吧</p><p>​    在学校期间,先电云计算比赛3月份后的国赛上新加了一个项目 小程序开发,我们组三个人,一个安卓,一个java,还有就是我 前端, 开始的时候老师不知道把任务分给了安卓,我的朋友看了一天头皮发麻,一点都不会,我就把任务接下来了。之前看过一点vue，，看了看wxml的数据绑定，这和vue像啊，，后来用原生语言写了完整的微信小程序，对于第一次接触小程序，踩了无数的坑，深刻感受到vue真的太好用了。。。。</p><p>​    7月多在github上面偶然看到了mpvue，当时感觉眼前一亮，用vue写小程序怎么实现的，，后来看了他们的文档，感觉挺不错的，在慕课网上面看了蜗牛老师的mpvue实战项目，决定好好学习一下，看看vue+小程序是怎么样的开发体验~~~</p><p>​    首先谢谢老师，课非常不错，基本完成项目对小程序和mpvue都有不错的了解，还对koa2进行讲解，墙裂推荐！页面上主要是这样的</p><p><img src="http://on7r0tqgu.bkt.clouddn.com/FqQ2fqAMADeR-6oYREIklGI84EsE.png" alt=""></p><p>主要是数据库哪一块,跟着老师打,很多都看不懂，虽然是knex ，但是语法基本就是mysql</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> book = <span class="keyword">await</span> mysql(<span class="string">'books'</span>)</span><br><span class="line">    .select(<span class="string">'books.*'</span>, <span class="string">'csessioninfo.user_info'</span>) </span><br><span class="line">    .join(<span class="string">'csessioninfo'</span>, <span class="string">'books.openid'</span>, <span class="string">'csessioninfo.open_id'</span>) </span><br><span class="line">    .limit(size) </span><br><span class="line">    .offset(<span class="built_in">Number</span>(page) * size)   </span><br><span class="line">    .orderBy(<span class="string">'books.id'</span>, <span class="string">'desc'</span>)</span><br></pre></td></tr></table></figure><p>类似这样的，mysql白学了，很多都忘了，后面恶补了mysql</p><p>有些比较坑人的地方，</p><ol><li><p>添加页面需要重启（这也不算坑）</p></li><li><p>登录事件需要用@getuserinfo 官网没有说明，害得我用vue的@click调试登录bug半个月</p></li><li><p>wx原生事件不可以写在methods里面，有说明，但是还是才踩到了坑，不小心把下拉事件写到methods里面</p></li><li><p>最好不要在mpvue没有启动的时候变动代码，因为假如代码有错误，mpvue可能会卡在启动的地方</p></li><li><p>引用static里面的资源，不可以写项目路径 按build后的路径写 <code>/static/text.png</code>，而不是vue项目里面的路径</p></li><li><p>小程序内部跳转路径<code>../write/main</code>应该这么写，不可以使用vue-router很遗憾</p></li><li><p>报错<code>pages/xxx/xxx.js 出现脚本错误或者未正确调用 Page()</code>，因为vue文件不可以为空。。。</p><p>当然很多坑并不是因为mpvue，而是小程序自带的，我仅仅总结一下</p></li></ol><p>下面说说开发中感觉mpvue的优点吧</p><ol><li>使用vue开发可以组件化，感觉很舒服</li><li>对已经会vue的开发者来说，几乎没有学习成本</li><li>几乎不用关系页面配置文件，只要指定主页就好了</li></ol><p>细说的话优点就很多啦，因为基于vue，使用一个成熟的框架写小程序，是很舒服的，前期坑比较多，但是熟练了，就会感觉mpvue写小程序是，相对于原生wx语法，体验不是一个级别呢</p><p>​    总的来说，蜗牛老师的实战课程挺不错的，学会了很多，对koa也有了更好的了解</p><p>下面是我这个mpvue项目的地址</p><p><a href="https://github.com/vkcyan/wl-mpvue" target="_blank" rel="noopener">豆瓣读书微信小程序</a></p><p>​                                                        感谢美团给我们带来mpvue，希望他越来越好</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    昨晚睡前打开了半个月没打开的知乎, 看到了一个专栏文章&lt;a href=&quot;https://zhuanlan.zhihu.com/p/40739079&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;再见jquery,我的老朋友&lt;/a&gt;,突然想到之前g
      
    
    </summary>
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="mpvue" scheme="http://yoursite.com/tags/mpvue/"/>
    
  </entry>
  
  <entry>
    <title>mysql使用指南 - 基础篇</title>
    <link href="http://yoursite.com/2018/08/03/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8C%87%E5%8D%97%20-%20%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    <id>http://yoursite.com/2018/08/03/mysql数据库指南 - 基础篇/</id>
    <published>2018-08-02T16:00:00.000Z</published>
    <updated>2018-08-03T11:52:08.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DDL-–-Data-Definition-Language-数据库定义语言"><a href="#DDL-–-Data-Definition-Language-数据库定义语言" class="headerlink" title="DDL – Data Definition Language 数据库定义语言"></a>DDL – Data Definition Language 数据库定义语言</h2><h5 id="查询当前所有数据库"><a href="#查询当前所有数据库" class="headerlink" title="查询当前所有数据库"></a>查询当前所有数据库</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><h5 id="进入-切换数据库"><a href="#进入-切换数据库" class="headerlink" title="进入/切换数据库"></a>进入/切换数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use base;</span><br></pre></td></tr></table></figure><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database base;</span><br></pre></td></tr></table></figure><h5 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database base;</span><br></pre></td></tr></table></figure><h3 id="mysql数据库表的数据类型"><a href="#mysql数据库表的数据类型" class="headerlink" title="mysql数据库表的数据类型"></a>mysql数据库表的数据类型</h3><p>也就是创建表的时候的数据类型</p><blockquote><p><strong>int</strong>: 整形</p><p>使用场景: 用于储存数值</p></blockquote><blockquote><p><strong>double</strong>: 浮点型 例如 double(5,2) 表示最多五位数 其中必须两位小数,及最大值为999.99</p><p>使用场景: 用于储存小数类型的值</p></blockquote><blockquote><p><strong>decimal</strong>: 浮点型,多用于在表示金额上使用的类型,因为不会出现进度丢失</p><p>使用场景: 储存精细数据</p></blockquote><blockquote><p><strong>char</strong>: 固定长度字符串类型 char(255) 长度不足补足到指定长度 过长报错</p><p>使用场景: 储存长度不变的数据 例如 身份证号 手机号 等等</p></blockquote><blockquote><p><strong>varchar</strong>: 可变长度字符串类型 varchar(65535) </p><p>使用场景: 变化的数据 (会在查询的时候 使用长度去记录长度值,所以会浪费性能,所以固长性能更好) </p></blockquote><p>mysql独有的数据类型</p><blockquote><p>text: 存储可变的文本信息 例如小说</p><p> blob: 存储可变的二进制类型  例如图片转二进制存储</p></blockquote><h3 id="表的使用命令"><a href="#表的使用命令" class="headerlink" title="表的使用命令"></a>表的使用命令</h3><h5 id="查看当前数据库的表"><a href="#查看当前数据库的表" class="headerlink" title="查看当前数据库的表"></a>查看当前数据库的表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><h5 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h5><p>首先进入指定需要创建表数据库</p><blockquote><p>创建一个 名叫mytable的表 </p><p>表结构为:</p><ul><li>字段为定长11字节的number储存学号</li><li>字段为变长20字节的name 储蓄姓名</li><li>字段为int的age 储蓄年龄</li><li>字段为变长10字节的sex 储蓄性别</li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> base;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> mytable (</span><br><span class="line">    <span class="built_in">number</span> <span class="built_in">char</span>(<span class="number">11</span>),</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    age <span class="built_in">int</span>,</span><br><span class="line">    sex <span class="built_in">varchar</span>(<span class="number">10</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="查看表的建表语句"><a href="#查看表的建表语句" class="headerlink" title="查看表的建表语句"></a>查看表的建表语句</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> mytable</span><br></pre></td></tr></table></figure><h5 id="查询表结构"><a href="#查询表结构" class="headerlink" title="查询表结构"></a>查询表结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc mytable;</span><br></pre></td></tr></table></figure><h5 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table mytable;</span><br></pre></td></tr></table></figure><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><blockquote><p><strong>注意: 所有的修改表操作 命令前面都是 alter table 表名</strong></p><p>这里还是很语义化的 alter 意为改变 modify意为修改</p></blockquote><h5 id="修改-–-给现有的表添加一列-字段"><a href="#修改-–-给现有的表添加一列-字段" class="headerlink" title="修改 – 给现有的表添加一列(字段)"></a>修改 – 给现有的表添加一列(字段)</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> mytable <span class="keyword">add</span>(</span><br><span class="line">education <span class="built_in">varchar</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line">//修改表mytable 添加字段education指定类型为varchar(50)</span><br></pre></td></tr></table></figure><h5 id="修改-–-给现有的表修改列-字段-类型"><a href="#修改-–-给现有的表修改列-字段-类型" class="headerlink" title="修改 – 给现有的表修改列(字段)类型"></a>修改 – 给现有的表修改列(字段)类型</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> mytable <span class="keyword">modify</span> education <span class="built_in">varchar</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><h5 id="修改-–-删除指定的列-字段"><a href="#修改-–-删除指定的列-字段" class="headerlink" title="修改 – 删除指定的列(字段)"></a>修改 – 删除指定的列(字段)</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> mytable <span class="keyword">drop</span> education;</span><br></pre></td></tr></table></figure><h5 id="修改-–-修改表名称"><a href="#修改-–-修改表名称" class="headerlink" title="修改 – 修改表名称"></a>修改 – 修改表名称</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> mytable <span class="keyword">rename</span> <span class="keyword">to</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><h5 id="修改-–-数据库编码"><a href="#修改-–-数据库编码" class="headerlink" title="修改 – 数据库编码"></a>修改 – 数据库编码</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> dase <span class="built_in">character</span> <span class="keyword">set</span> utf8;</span><br></pre></td></tr></table></figure><h2 id="DML-–-Data-Manipulation-Language-数据操纵语言"><a href="#DML-–-Data-Manipulation-Language-数据操纵语言" class="headerlink" title="DML – Data Manipulation Language 数据操纵语言"></a>DML – Data Manipulation Language 数据操纵语言</h2><h5 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h5><p>在数据里面所有的字符串类型必须是<strong>单引号</strong></p><blockquote><p>格式 insert into tables(? , ? , ? ,?) values(‘?’ , ‘?’ , ? , ‘?’ );</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span>(<span class="built_in">number</span>,<span class="keyword">name</span>,age,sex) <span class="keyword">values</span>(<span class="string">'0000001'</span>,<span class="string">'zhangsan'</span>,<span class="number">18</span>,<span class="string">'man'</span>);</span><br></pre></td></tr></table></figure><p>插入部分列 – 表格允许的空值的情况下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span>(<span class="built_in">number</span>,<span class="keyword">name</span>) <span class="keyword">values</span>(<span class="string">'0000002'</span>,<span class="string">'lisi'</span>);</span><br></pre></td></tr></table></figure><p>不给出插入列 - 默认插入所有列</p><blockquote><p>insert into tables values( ‘?’ , ‘?’ , ?, ‘?’ );</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span> <span class="keyword">values</span>(<span class="string">'0000003'</span>,<span class="string">'xiaosan'</span>,<span class="number">29</span>,<span class="string">'woman'</span>);</span><br></pre></td></tr></table></figure><h5 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h5><blockquote><p>这样不指定条件的修改会将表里面的所有字段为age都变成了20 千万注意不能不指定条件</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> age=<span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>更新 number为000001的 age 变成30</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> age=<span class="number">30</span> <span class="keyword">where</span> <span class="built_in">number</span>=<span class="string">'0000001'</span>;</span><br></pre></td></tr></table></figure><p>更新 number为0000002 或者 name 为xiaosan 的 sex为 woman</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> sex=<span class="string">'woman'</span> <span class="keyword">where</span> <span class="built_in">number</span>=<span class="string">'0000002'</span> <span class="keyword">or</span> <span class="keyword">name</span>=<span class="string">'xiaosan'</span>;</span><br></pre></td></tr></table></figure><p>更新 age在15 到 48之间的 age+1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> age=age+<span class="number">1</span> <span class="keyword">where</span> age &gt; <span class="number">15</span> <span class="keyword">and</span> age &lt; <span class="number">48</span>;</span><br></pre></td></tr></table></figure><p>更新 age 在15(包括) 到40(包括)之间的 age+1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> age=age+<span class="number">1</span> <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">15</span> <span class="keyword">and</span> <span class="number">40</span>;</span><br></pre></td></tr></table></figure><p>使用<strong>in</strong>语法实现多数据改动</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> age=<span class="number">36</span> <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">in</span>(<span class="string">'lisi'</span>,<span class="string">'xiaosan'</span>);</span><br></pre></td></tr></table></figure><p>针对表中数据为null,应该如何更改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> age=<span class="number">30</span> <span class="keyword">where</span> age=<span class="literal">null</span>;        //这样是错误的 因为age=null会返回false!!</span><br><span class="line"><span class="comment">--------------------------------------------</span></span><br><span class="line"> <span class="keyword">update</span> <span class="keyword">tables</span> <span class="keyword">set</span> age=<span class="number">30</span> <span class="keyword">where</span> age <span class="keyword">is</span> <span class="literal">null</span>; //is 判断才是正确的</span><br></pre></td></tr></table></figure><h5 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h5><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p>删除表列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">tables</span> <span class="keyword">where</span> age=<span class="number">29</span>;</span><br></pre></td></tr></table></figure><h2 id="DCL-–-Data-Control-Language-数据库控制语言"><a href="#DCL-–-Data-Control-Language-数据库控制语言" class="headerlink" title="DCL – Data Control Language 数据库控制语言"></a>DCL – Data Control Language 数据库控制语言</h2><h5 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h5><blockquote><p>创建用户vkcyan密码为000000指定只能通过localhost登录</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> vkcyan@localhost <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'000000'</span>;</span><br></pre></td></tr></table></figure><h5 id="用户授权"><a href="#用户授权" class="headerlink" title="用户授权"></a>用户授权</h5><blockquote><p>将base这个数据库里面的所有表的所有权限都给用户vkcyan</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> all <span class="keyword">on</span> base.* <span class="keyword">to</span> vkcyan@localhost;</span><br></pre></td></tr></table></figure><blockquote><p>权限有很多 create alter drop insert update delete select </p></blockquote><h5 id="取消授权"><a href="#取消授权" class="headerlink" title="取消授权"></a>取消授权</h5><blockquote><p>取消vkcyan用户的 base数据库下所有表的删除权限</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> <span class="keyword">delete</span> <span class="keyword">on</span> base.* <span class="keyword">from</span> vkcyan@localhost;</span><br></pre></td></tr></table></figure><h5 id="查看用户权限"><a href="#查看用户权限" class="headerlink" title="查看用户权限"></a>查看用户权限</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> vkcyan@localhost;</span><br></pre></td></tr></table></figure><h5 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> vkcyan@localhost;</span><br></pre></td></tr></table></figure><h2 id="DQL-–-Data-Query-Language-数据查询语言DQL"><a href="#DQL-–-Data-Query-Language-数据查询语言DQL" class="headerlink" title="DQL –  Data Query Language 数据查询语言DQL"></a>DQL –  Data Query Language 数据查询语言DQL</h2><h5 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h5><blockquote><ul><li>代表查询全部 </li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><blockquote><p>可以指定查询的列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,comm <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><blockquote><p>查询数据去除相同的行   <code>distinct关键字为去除重复数据</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> comm <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h5 id="列运算-数字"><a href="#列运算-数字" class="headerlink" title="列运算 - 数字"></a>列运算 - 数字</h5><blockquote><p> 查询emp表的所有信息 并且查询sal列数据*1.5 的数据  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sal,sal*1.5 from emp;</span><br></pre></td></tr></table></figure><blockquote><p>假如是无法运算的值,会将数据按0处理</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">select ename,ename+100 from emp;</span><br><span class="line"></span><br><span class="line">+--------+-----------+</span><br><span class="line">| ename  | ename+100 |</span><br><span class="line">+--------+-----------+</span><br><span class="line">| 甘宁   |       100 |</span><br><span class="line">| 黛绮丝 |       100 |</span><br><span class="line">| 殷天正 |       100 |</span><br><span class="line">| 刘备   |       100 |</span><br><span class="line">| 谢逊   |       100 |</span><br><span class="line">| 关羽   |       100 |</span><br><span class="line">| 张飞   |       100 |</span><br><span class="line">| 诸葛亮 |       100 |</span><br><span class="line">| 曾阿牛 |       100 |</span><br><span class="line">| 韦一笑 |       100 |</span><br><span class="line">| 周泰   |       100 |</span><br><span class="line">| 程普   |       100 |</span><br><span class="line">| 庞统   |       100 |</span><br><span class="line">| 黄盖   |       100 |</span><br><span class="line">+--------+-----------+</span><br></pre></td></tr></table></figure><blockquote><p> 列与列相加 这里注意 假如相加字段里面有null运算结果会变成null</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sal,comm,sal+comm <span class="keyword">from</span> emp;  //错误写法</span><br><span class="line">+<span class="comment">----------+----------+----------+</span></span><br><span class="line">| sal      | comm     | sal+comm |</span><br><span class="line">+<span class="comment">----------+----------+----------+</span></span><br><span class="line">|  8000.00 |     NULL |     NULL |</span><br><span class="line">| 16000.00 |  3000.00 | 19000.00 |</span><br><span class="line">| 12500.00 |  5000.00 | 17500.00 |</span><br><span class="line">| 29750.00 |     NULL |     NULL |</span><br><span class="line">| 12500.00 | 14000.00 | 26500.00 |</span><br><span class="line">| 28500.00 |     NULL |     NULL |</span><br><span class="line">| 24500.00 |     NULL |     NULL |</span><br><span class="line">| 30000.00 |     NULL |     NULL |</span><br><span class="line">| 50000.00 |     NULL |     NULL |</span><br><span class="line">| 15000.00 |     0.00 | 15000.00 |</span><br><span class="line">| 11000.00 |     NULL |     NULL |</span><br><span class="line">|  9500.00 |     NULL |     NULL |</span><br><span class="line">| 30000.00 |     NULL |     NULL |</span><br><span class="line">| 13000.00 |     NULL |     NULL |</span><br><span class="line">+<span class="comment">----------+----------+----------+</span></span><br><span class="line">//可以使用ifnull去处理null的数值</span><br><span class="line">mysql&gt; select sal,comm,sal+ifnull(comm,0) from emp;</span><br><span class="line">+<span class="comment">----------+----------+--------------------+</span></span><br><span class="line">| sal      | comm     | sal+ifnull(comm,0) |</span><br><span class="line">+<span class="comment">----------+----------+--------------------+</span></span><br><span class="line">|  8000.00 |     NULL |            8000.00 |</span><br><span class="line">| 16000.00 |  3000.00 |           19000.00 |</span><br><span class="line">| 12500.00 |  5000.00 |           17500.00 |</span><br><span class="line">| 29750.00 |     NULL |           29750.00 |</span><br><span class="line">| 12500.00 | 14000.00 |           26500.00 |</span><br><span class="line">| 28500.00 |     NULL |           28500.00 |</span><br><span class="line">| 24500.00 |     NULL |           24500.00 |</span><br><span class="line">| 30000.00 |     NULL |           30000.00 |</span><br><span class="line">| 50000.00 |     NULL |           50000.00 |</span><br><span class="line">| 15000.00 |     0.00 |           15000.00 |</span><br><span class="line">| 11000.00 |     NULL |           11000.00 |</span><br><span class="line">|  9500.00 |     NULL |            9500.00 |</span><br><span class="line">| 30000.00 |     NULL |           30000.00 |</span><br><span class="line">| 13000.00 |     NULL |           13000.00 |</span><br><span class="line">+<span class="comment">----------+----------+--------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>查询字段将null替换成任意值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ename,ifnull(mgr,'boss')from emp;</span><br><span class="line">+<span class="comment">--------+--------------------+</span></span><br><span class="line">| ename  | ifnull(mgr,'boss') |</span><br><span class="line">+<span class="comment">--------+--------------------+</span></span><br><span class="line">| 甘宁   | 1013               |</span><br><span class="line">| 黛绮丝 | 1006               |</span><br><span class="line">| 殷天正 | 1006               |</span><br><span class="line">| 刘备   | 1009               |</span><br><span class="line">| 谢逊   | 1006               |</span><br><span class="line">| 关羽   | 1009               |</span><br><span class="line">| 张飞   | 1009               |</span><br><span class="line">| 诸葛亮 | 1004               |</span><br><span class="line">| 曾阿牛 | boss               |</span><br><span class="line">| 韦一笑 | 1006               |</span><br><span class="line">| 周泰   | 1008               |</span><br><span class="line">| 程普   | 1006               |</span><br><span class="line">| 庞统   | 1004               |</span><br><span class="line">| 黄盖   | 1007               |</span><br><span class="line">+<span class="comment">--------+--------------------+</span></span><br></pre></td></tr></table></figure><h5 id="列运算-文字"><a href="#列运算-文字" class="headerlink" title="列运算 - 文字"></a>列运算 - 文字</h5><blockquote><p> concat 连接字符串</p><p>as 起别名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select concat ('我叫',ename,' ,我的工作是',job,',我的工资是',sal) as '描述' from emp;</span><br><span class="line">+<span class="comment">-------------------------------------------------+</span></span><br><span class="line">| 描述                                            |</span><br><span class="line">+<span class="comment">-------------------------------------------------+</span></span><br><span class="line">| 我叫甘宁 ,我的工作是文员,我的工资是8000.00      |</span><br><span class="line">| 我叫黛绮丝 ,我的工作是销售员,我的工资是16000.00 |</span><br><span class="line">| 我叫殷天正 ,我的工作是销售员,我的工资是12500.00 |</span><br><span class="line">| 我叫刘备 ,我的工作是经理,我的工资是29750.00     |</span><br><span class="line">| 我叫谢逊 ,我的工作是销售员,我的工资是12500.00   |</span><br><span class="line">| 我叫关羽 ,我的工作是经理,我的工资是28500.00     |</span><br><span class="line">| 我叫张飞 ,我的工作是经理,我的工资是24500.00     |</span><br><span class="line">| 我叫诸葛亮 ,我的工作是分析师,我的工资是30000.00 |</span><br><span class="line">| 我叫曾阿牛 ,我的工作是董事长,我的工资是50000.00 |</span><br><span class="line">| 我叫韦一笑 ,我的工作是销售员,我的工资是15000.00 |</span><br><span class="line">| 我叫周泰 ,我的工作是文员,我的工资是11000.00     |</span><br><span class="line">| 我叫程普 ,我的工作是文员,我的工资是9500.00      |</span><br><span class="line">| 我叫庞统 ,我的工作是分析师,我的工资是30000.00   |</span><br><span class="line">| 我叫黄盖 ,我的工作是文员,我的工资是13000.00     |</span><br><span class="line">+<span class="comment">-------------------------------------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>其别名 as   要注意! 一般情况下 as 省略也可以运行</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ename as 姓名,job as 工作 from emp;</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| 姓名   | 工作   |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| 甘宁   | 文员   |</span><br><span class="line">| 黛绮丝 | 销售员 |</span><br><span class="line">| 殷天正 | 销售员 |</span><br><span class="line">| 程普   | 文员   |</span><br><span class="line">| 庞统   | 分析师 |</span><br><span class="line">| 黄盖   | 文员   |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">mysql&gt; select ename 姓名,job 工作 from emp;</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| 姓名   | 工作   |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br><span class="line">| 甘宁   | 文员   |</span><br><span class="line">| 黛绮丝 | 销售员 |</span><br><span class="line">| 殷天正 | 销售员 |</span><br><span class="line">| 程普   | 文员   |</span><br><span class="line">| 庞统   | 分析师 |</span><br><span class="line">| 黄盖   | 文员   |</span><br><span class="line">+<span class="comment">--------+--------+</span></span><br></pre></td></tr></table></figure><h5 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h5><blockquote><p>查询sal字段大于20000的</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal&gt;<span class="number">20000</span>;</span><br></pre></td></tr></table></figure><blockquote><p>查询comm字段不为null的</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><blockquote><p>查询sal找20000到30000之间的</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where sal between 20000 and 30000;</span><br></pre></td></tr></table></figure><blockquote><p>查询是字段job 是经理和分析师的</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where job in (&apos;经理&apos;,&apos;分析师&apos;);</span><br></pre></td></tr></table></figure><p>模糊查询</p><blockquote><p>查询姓张的两个字的</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">'张_'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>查询名字是两个字的  //下划线表示匹配1个字符</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">'__'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>查询以job列某个字符结尾的指定列  //%表示匹配多个字符</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where job like &apos;%员&apos;;</span><br><span class="line">select * from emp where job like &apos;%&apos;;</span><br></pre></td></tr></table></figure><h5 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h5><blockquote><p>按指定字段排序(默认升序)</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal;</span><br><span class="line">//在emp表里面 按 order 来进行排序</span><br></pre></td></tr></table></figure><blockquote><p>升序</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><blockquote><p>降序</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><blockquote><p>假如一列比较相同的情况下 可以在进行比较</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">asc</span>,comm <span class="keyword">desc</span>;</span><br><span class="line">//假如sal字段相同就降序比较comm字段</span><br></pre></td></tr></table></figure><h5 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h5><blockquote><p>算出一列的有效行数遇到null就跳过</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp;</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| count(*) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">|       14 |</span><br><span class="line">+<span class="comment">----------+</span></span><br></pre></td></tr></table></figure><blockquote><p>算出一列的值 遇到null会跳过</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select sum(sal) from emp;</span><br><span class="line">+-----------+</span><br><span class="line">| sum(sal)  |</span><br><span class="line">+-----------+</span><br><span class="line">| 290250.00 |</span><br><span class="line">+-----------+</span><br></pre></td></tr></table></figure><blockquote><p>算出一列的最大值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select max(sal) from emp;</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| max(sal) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| 50000.00 |</span><br><span class="line">+<span class="comment">----------+</span></span><br></pre></td></tr></table></figure><blockquote><p>算出一列的最小值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select min(sal) from emp;</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| min(sal) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">|  8000.00 |</span><br><span class="line">+<span class="comment">----------+</span></span><br></pre></td></tr></table></figure><blockquote><p>算出平均值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select avg(sal) from emp;</span><br><span class="line">+<span class="comment">--------------+</span></span><br><span class="line">| avg(sal)     |</span><br><span class="line">+<span class="comment">--------------+</span></span><br><span class="line">| 20732.142857 |</span><br><span class="line">+<span class="comment">--------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>使用 as 拼接</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select count(*) as 人数,sum(sal) as 工资总和,max(sal) as 最高工资,min(sal) as 最低工资,</span><br><span class="line">avg(sal) as 平均工资 from emp;</span><br><span class="line">+<span class="comment">------+-----------+----------+----------+--------------+</span></span><br><span class="line">| 人数 | 工资总和  | 最高工资 | 最低工资 | 平均工资      |</span><br><span class="line">+<span class="comment">------+-----------+----------+----------+--------------+</span></span><br><span class="line">|   14 | 290250.00 | 50000.00 |  8000.00 | 20732.142857 |</span><br><span class="line">+<span class="comment">------+-----------+----------+----------+--------------+</span></span><br></pre></td></tr></table></figure><h5 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h5><blockquote><p>查询个职位的数量,以及最高工资  这里注意除了分组列 其他都是聚合函数</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> job,<span class="keyword">count</span>(*),<span class="keyword">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job;</span><br><span class="line">+<span class="comment">--------+----------+----------+</span></span><br><span class="line">| job    | count(*) | max(sal) |</span><br><span class="line">+<span class="comment">--------+----------+----------+</span></span><br><span class="line">| 分析师 |        2 | 30000.00 |</span><br><span class="line">| 文员   |        4 | 13000.00 |</span><br><span class="line">| 经理   |        3 | 29750.00 |</span><br><span class="line">| 董事长 |        1 | 50000.00 |</span><br><span class="line">| 销售员 |        4 | 16000.00 |</span><br><span class="line">+<span class="comment">--------+----------+----------+</span></span><br></pre></td></tr></table></figure><blockquote><p>按组查询emp表 deptnn字段  sal大于1500的全部数量,并按组分好</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select deptno,count(*) from emp where sal&gt;15000 group by deptno;</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">| deptno | count(*) |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">|     10 |        2 |</span><br><span class="line">|     20 |        3 |</span><br><span class="line">|     30 |        2 |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br></pre></td></tr></table></figure><blockquote><p> 按组查询emp表 deptnn字段  sal大于1500的全部数量,并按组分好 分好后把大于2的留下</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select deptno,count(*) from emp where sal&gt;15000 group by deptno having count(*)&gt;2;</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">| deptno | count(*) |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br><span class="line">|     20 |        3 |</span><br><span class="line">+<span class="comment">--------+----------+</span></span><br></pre></td></tr></table></figure><h5 id="limit子句-方言"><a href="#limit子句-方言" class="headerlink" title="limit子句(方言)"></a>limit子句(方言)</h5><blockquote><p>主要用于分页  limit 0,5 从0开始打印5行数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from emp limit 0,5;                                             </span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+  </span></span><br><span class="line">| empno | ename  | job    | mgr  | hiredate   | sal      | COMM     | deptno |  </span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+  </span></span><br><span class="line">|  1001 | 甘宁   | 文员   | 1013 | 2000-12-17 |  8000.00 |     NULL |     20 |      </span><br><span class="line">|  1002 | 黛绮丝 | 销售员 | 1006 | 2001-02-20 | 16000.00 |  3000.00 |     30 |        </span><br><span class="line">|  1003 | 殷天正 | 销售员 | 1006 | 2001-02-22 | 12500.00 |  5000.00 |     30 |        </span><br><span class="line">|  1004 | 刘备   | 经理   | 1009 | 2001-04-02 | 29750.00 |     NULL |     20 |      </span><br><span class="line">|  1005 | 谢逊   | 销售员 | 1006 | 2001-09-28 | 12500.00 | 14000.00 |     30 |       </span><br><span class="line">+<span class="comment">-------+--------+--------+------+------------+----------+----------+--------+</span></span><br></pre></td></tr></table></figure><p>例如一页数据为10  查询第三页</p><p>select * from  limit 20 ,10</p><p>公式:  (查询页 - 1)  * 每页记录数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;DDL-–-Data-Definition-Language-数据库定义语言&quot;&gt;&lt;a href=&quot;#DDL-–-Data-Definition-Language-数据库定义语言&quot; class=&quot;headerlink&quot; title=&quot;DDL – Data Defin
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题库 7-31</title>
    <link href="http://yoursite.com/2018/07/31/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BA%93%207-31/"/>
    <id>http://yoursite.com/2018/07/31/前端面试题库 7-31/</id>
    <published>2018-07-31T01:14:28.516Z</published>
    <updated>2018-07-31T01:18:33.110Z</updated>
    
    <content type="html"><![CDATA[<p>1，懒加载原理？<a href="http://bbs.daxiangclass.com/?thread-22.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-22.htm</a><br>2，为什么要初始化样式？<a href="http://bbs.daxiangclass.com/?thread-170.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-170.htm</a><br>3，在开发中怎么与后台合作的？<a href="http://bbs.daxiangclass.com/?thread-88.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-88.htm</a><br>4，怎么理解promise（语法糖）<a href="http://bbs.daxiangclass.com/?thread-65.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-65.htm</a><br>5，HTML 与 XHTML——二者有什么区别？<a href="http://bbs.daxiangclass.com/" target="_blank" rel="noopener">http://bbs.daxiangclass.com/</a>?</p><p>1.DOM执行事件流程    <a href="http://bbs.daxiangclass.com/?thread-13.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-13.htm</a><br>2.关于图片懒加载的所有问题    <a href="http://bbs.daxiangclass.com/?thread-278.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-278.htm</a><br>3.vue的优势为什么使用vue    <a href="http://bbs.daxiangclass.com/?thread-35.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-35.htm</a><br>4.请说出三种减低页面加载时间的方法？    <a href="http://bbs.daxiangclass.com/?thread-248.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-248.htm</a><br>5.移动端项目如何解决300ms延迟问题？    <a href="http://bbs.daxiangclass.com/?thread-77.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-77.htm</a></p><p>工作中常用的浏览器，这些浏览器的内核是什么？    <a href="http://bbs.daxiangclass.com/?thread-120.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-120.htm</a><br>事件传递，事件冒泡简单介绍    <a href="http://bbs.daxiangclass.com/?thread-120.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-120.htm</a><br>ES6特性简单介绍    <a href="http://bbs.daxiangclass.com/?thread-120.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-120.htm</a><br>promise简单介绍    <a href="http://bbs.daxiangclass.com/?thread-120.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-120.htm</a></p><p>1、懒加载原理？    <a href="http://bbs.daxiangclass.com/?thread-22.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-22.htm</a><br>2、请说出三种减低页面加载时间的方法？    <a href="http://bbs.daxiangclass.com/?thread-248.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-248.htm</a><br>4、px 和 em 的区别。    <a href="http://bbs.daxiangclass.com/?thread-164.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-164.htm</a></p><p>如何垂直居中一个浮动元素？    <a href="http://bbs.daxiangclass.com/?thread-163.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-163.htm</a><br>jquery的优点？    <a href="http://bbs.daxiangclass.com/?thread-10.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-10.htm</a><br>vue组件有多少个生命周期？    <a href="http://bbs.daxiangclass.com/?thread-80.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-80.htm</a><br>前端页面有哪三层构成，分别是什么?作用是什么?    <a href="http://bbs.daxiangclass.com/?thread-179.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-179.htm</a><br>HTML5有哪些不同类型的存储?    <a href="http://bbs.daxiangclass.com/?thread-111.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-111.htm</a></p><p>为什么要初始化样式    <a href="http://bbs.daxiangclass.com/?thread-170.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-170.htm</a><br>什么是闭包？在开发项目时什么地方用闭包    <a href="http://bbs.daxiangclass.com/?thread-8.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-8.htm</a><br>b 标签和 strong 标签,i 标签和 em 标签的区别？    <a href="http://bbs.daxiangclass.com/?thread-198.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-198.htm</a></p><p>1，window.onload和$(document).ready()的区别    <a href="http://bbs.daxiangclass.com/?thread-282.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-282.htm</a><br>2，css 优先级算法如何计算？    <a href="http://bbs.daxiangclass.com/?thread-204.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-204.htm</a><br>3，谈谈 This 对象的理解？    <a href="http://bbs.daxiangclass.com/?thread-258.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-258.htm</a><br>4，CSS 中 link 和@import 的区别是    <a href="http://bbs.daxiangclass.com/?thread-168.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-168.htm</a><br>5，vue中watch和computed的区别    <a href="http://bbs.daxiangclass.com/?thread-51.htm" target="_blank" rel="noopener">http://bbs.daxiangclass.com/?thread-51.htm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1，懒加载原理？&lt;a href=&quot;http://bbs.daxiangclass.com/?thread-22.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://bbs.daxiangclass.com/?thread-22.htm&lt;/a
      
    
    </summary>
    
      <category term="面试题" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="面试题" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>js数组去重(多种写法)</title>
    <link href="http://yoursite.com/2018/07/30/js%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    <id>http://yoursite.com/2018/07/30/js数组去重/</id>
    <published>2018-07-29T16:00:00.000Z</published>
    <updated>2018-07-30T03:21:37.087Z</updated>
    
    <content type="html"><![CDATA[<h3 id="最基本的写法-使用indexOf"><a href="#最基本的写法-使用indexOf" class="headerlink" title="最基本的写法 使用indexOf()"></a>最基本的写法 使用indexOf()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">77</span>,<span class="number">32</span>,<span class="number">54</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">52</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line"><span class="comment">//比较常规的语法使用indexOf来判断是否已经存在</span></span><br><span class="line">getFileArray(arr)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFileArray</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> array = [];</span><br><span class="line">  arr.forEach(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(array.indexOf(e) !== <span class="number">-1</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      array.push(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="看起来性能还不错的去除方法"><a href="#看起来性能还不错的去除方法" class="headerlink" title="看起来性能还不错的去除方法"></a>看起来性能还不错的去除方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过遍历每次被值给到数组角标 适用于数组里面数量不太的数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">77</span>,<span class="number">32</span>,<span class="number">54</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">52</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line">getFilterArray(arr)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFilterArray</span> (<span class="params">array</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> res = [];</span><br><span class="line">    <span class="keyword">const</span> json = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">        <span class="keyword">const</span> _self = array[i];    <span class="comment">//获取迭代的数值</span></span><br><span class="line">        <span class="keyword">if</span>(!json[_self])&#123;          <span class="comment">//假如json在_self这个下标没有数值,就说明这个数据没有</span></span><br><span class="line">            res.push(_self);       <span class="comment">//没有的话就push</span></span><br><span class="line">            json[_self] = <span class="number">1</span>;       <span class="comment">//同时给这和匹配不到的下标一个值,保证下次进不来</span></span><br><span class="line">        &#125;                          <span class="comment">// 这样写的话 不需要循环遍历 对性能要求更小</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="另类的写法"><a href="#另类的写法" class="headerlink" title="另类的写法"></a>另类的写法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var array = [1, 1, 5, 77, 32, 54, 2, 4, 5, 2, 2, 4, 52, 2, 2, 2, 2, 2]</span><br><span class="line">arrtoObject(arr)</span><br><span class="line">function arrtoObject(arrs) &#123;</span><br><span class="line">  //var obj=&#123;&#125;;</span><br><span class="line">  var obj = new Object();</span><br><span class="line">  for (var i = 0; i &lt; arrs.length; i++) &#123;</span><br><span class="line">    obj[arrs[i]] = true;</span><br><span class="line">  &#125;</span><br><span class="line">  objectToarr(obj)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function objectToarr(obj)&#123;</span><br><span class="line">  console.log(obj);</span><br><span class="line">  var arr = [];</span><br><span class="line">  for (const i in obj) &#123;</span><br><span class="line">    arr.push(i)</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(arr);</span><br><span class="line">  return arr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ES5-filter过滤函数"><a href="#ES5-filter过滤函数" class="headerlink" title="ES5 filter过滤函数"></a>ES5 filter过滤函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">77</span>,<span class="number">32</span>,<span class="number">54</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">52</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> res = array.filter(<span class="function"><span class="keyword">function</span> (<span class="params">item, index, array</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> array.indexOf(item) === index;   <span class="comment">//因为array.indexOf返回数组的下标 如果这里的下标和index不一样说明已经存在了,就直接退出了</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(unique(array));</span><br></pre></td></tr></table></figure><h3 id="ES6-Set-这简直就是为过滤而生的-过滤-排序"><a href="#ES6-Set-这简直就是为过滤而生的-过滤-排序" class="headerlink" title="ES6 Set  这简直就是为过滤而生的  过滤 排序"></a>ES6 Set  这简直就是为过滤而生的  过滤 排序</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">77</span>, <span class="number">32</span>, <span class="number">54</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">52</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">FilterArray</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  set = <span class="keyword">new</span> <span class="built_in">Set</span>(arr)</span><br><span class="line">  <span class="keyword">let</span> arrays = <span class="built_in">Array</span>.from(set)</span><br><span class="line">  arrays.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> arrays</span><br><span class="line">&#125;</span><br><span class="line">FilterArray(arr)</span><br></pre></td></tr></table></figure><p>假如只要排序的话</p><h3 id="我们可以用一行代码实现"><a href="#我们可以用一行代码实现" class="headerlink" title="我们可以用一行代码实现"></a>我们可以用一行代码实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">77</span>, <span class="number">32</span>, <span class="number">54</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">52</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]</span><br><span class="line"><span class="keyword">var</span> FilterArray = <span class="function">(<span class="params">arr</span>) =&gt;</span> [...new <span class="built_in">Set</span>(arr)]   <span class="comment">//</span></span><br><span class="line">FilterArray(arr)</span><br></pre></td></tr></table></figure><p>js越来越强大</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;最基本的写法-使用indexOf&quot;&gt;&lt;a href=&quot;#最基本的写法-使用indexOf&quot; class=&quot;headerlink&quot; title=&quot;最基本的写法 使用indexOf()&quot;&gt;&lt;/a&gt;最基本的写法 使用indexOf()&lt;/h3&gt;&lt;figure class
      
    
    </summary>
    
      <category term="数组去重" scheme="http://yoursite.com/categories/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    
    
      <category term="array" scheme="http://yoursite.com/tags/array/"/>
    
      <category term="数组去重" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    
  </entry>
  
  <entry>
    <title>(flex) UI 布局</title>
    <link href="http://yoursite.com/2018/07/30/flex%20%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2018/07/30/flex 布局/</id>
    <published>2018-07-29T16:00:00.000Z</published>
    <updated>2018-07-30T02:20:57.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="flex-UI-布局"><a href="#flex-UI-布局" class="headerlink" title="(flex) UI 布局"></a>(flex) UI 布局</h1><p>flex布局无论在pc端还是mobile端或者小程序端都是非常好的布局选择,完全可以代替浮动,非常有学习的必要</p><p>在flex上面的下面三个教程就可以学会了</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox" target="_blank" rel="noopener">MDN上对flex布局的理解</a></p><p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">flex阮一峰大神教程-1</a></p><p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener">flex阮一峰大神教程-2</a></p><p>下面的是小程序端的</p><blockquote><p>index.wxml</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'container'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'item'</span>&gt;</span> </span><br><span class="line">      1</span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'item'</span>&gt;</span> </span><br><span class="line">      2</span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'item'</span>&gt;</span> </span><br><span class="line">      3</span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'item'</span>&gt;</span> </span><br><span class="line">      4</span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>index.wxss</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">page</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#FFC0CB</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: rosybrown;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>界面是这样的</p><p><img src="http://on7r0tqgu.bkt.clouddn.com/FqayVxBDbAXexHbrKw1recSFN5Kw.png" alt=""></p><p>这是默认状态 主轴是从左到右 交叉轴是从上到下</p><p>我们可以改变主轴和交叉轴</p><blockquote><p><strong>flex-direction  决定元素的排列方向</strong></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就会变成这样</p><p><img src="http://on7r0tqgu.bkt.clouddn.com/FkW-7r4EjW9oTn9NTkniOQECpo4o.png" alt=""></p><p>主轴和交叉轴改变方向</p><blockquote><p>flex-direction 有两种属性 <code>column</code> <code>row</code></p><p>row 为 <code>默认属性</code> 为横向排列 主轴是从左到右 交叉轴是从上到下</p><p> column 为竖向排列            主轴是从上到下  交叉轴是从左到右</p></blockquote><blockquote><p><strong>flex-warp   决定元素如何换行(排列不下的情况下)</strong></p></blockquote><p><img src="http://on7r0tqgu.bkt.clouddn.com/Fgm0OvDKvk8VyeGzAXuXxXgS--Vq.png" alt=""></p><p>将wxml里面的view复制粘贴</p><p>这里明显看到 元素被挤变形了 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">page&#123;</span><br><span class="line">  height: 100%;</span><br><span class="line">  width: 100%;</span><br><span class="line">  background-color: #FFC0CB;</span><br><span class="line">&#125;</span><br><span class="line">.container&#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 500px;</span><br><span class="line">  display: flex;</span><br><span class="line">   flex-direction: row;</span><br><span class="line"></span><br><span class="line">  /*</span><br><span class="line">   flex-direction 有两种属性 column row row 为默认属性为横向排列 column 为竖向排列 </span><br><span class="line">   当是column的时候  主轴是从上到下  交叉轴是从左到右</span><br><span class="line">   当是row的时候 主轴是从做右 交叉轴是从上到下</span><br><span class="line">  */</span><br><span class="line">  /* flex-wrap: wrap; */</span><br><span class="line">  /* flex-warp 主控制时候换行 默认是nowarp 不换行 还有 warp 换行 warp-reverse 行数翻转*/</span><br><span class="line">  /* flex-flow: row wrap; */</span><br><span class="line">  /* flex-flow说 flex-direction flex-warp的缩写 可以实现上面的参数 简写 */</span><br><span class="line">  /* justify-content: space-between; */</span><br><span class="line">  /* 主轴对齐 justify-content:center 居中</span><br><span class="line">                            flex-start 默认左对齐</span><br><span class="line">                            flex-end 右对齐</span><br><span class="line">                            space-round 让间距相等</span><br><span class="line">                            space-between 左右不留间距</span><br><span class="line">  */</span><br><span class="line">  /* align-items: stretch; */</span><br><span class="line">  /* align-items: flex-start 默认在交叉轴上方</span><br><span class="line">                  flex-end   交叉轴下方排列</span><br><span class="line">                  center     在交叉轴中间排列</span><br><span class="line">                  stretch    当不设置高度的时候 会自动给高度</span><br><span class="line">  */</span><br><span class="line">&#125;</span><br><span class="line">.item&#123;</span><br><span class="line">  width: 100rpx;</span><br><span class="line">  height: 100rpx;</span><br><span class="line">  background-color: rosybrown;</span><br><span class="line">  border: 1px solid #fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本上正常情况下都可以使用的居中布局</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</span><br><span class="line"><span class="selector-tag">justify-content</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="selector-tag">align-items</span><span class="selector-pseudo">:center</span>;</span><br></pre></td></tr></table></figure><p>​                                                        –多学习,多总结,多努力,未来很美好</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;flex-UI-布局&quot;&gt;&lt;a href=&quot;#flex-UI-布局&quot; class=&quot;headerlink&quot; title=&quot;(flex) UI 布局&quot;&gt;&lt;/a&gt;(flex) UI 布局&lt;/h1&gt;&lt;p&gt;flex布局无论在pc端还是mobile端或者小程序端都是非常好的布
      
    
    </summary>
    
      <category term="flex" scheme="http://yoursite.com/categories/flex/"/>
    
    
      <category term="flex" scheme="http://yoursite.com/tags/flex/"/>
    
      <category term="css布局" scheme="http://yoursite.com/tags/css%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>node.js环境安装</title>
    <link href="http://yoursite.com/2018/07/30/node.js%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/07/30/node.js环境搭建/</id>
    <published>2018-07-29T16:00:00.000Z</published>
    <updated>2018-07-30T02:22:47.007Z</updated>
    
    <content type="html"><![CDATA[<p>首先环境配置</p><p>node.js环境安装</p><p><a href="https://www.jianshu.com/p/03a76b2e7e00" target="_blank" rel="noopener">https://www.jianshu.com/p/03a76b2e7e00</a>  </p><p>安装服务express作为测试</p><p><a href="https://www.jianshu.com/p/03a76b2e7e00https://jingyan.baidu.com/article/922554468a3466851648f419.html" target="_blank" rel="noopener">https://www.jianshu.com/p/03a76b2e7e00https://jingyan.baidu.com/article/922554468a3466851648f419.html</a></p><p>如果成功访问了localhost:3000 恭喜 环境已经没有问题了</p><p>接下来就是webpack的安装配置了</p><p>ps: 前几天更新了webpack4.0 官网没有更新完成 全是坑 建议这段时间不要用4.0版本 </p><p>官网最开始配置就是错的 </p><p>现在到    设定 HtmlWebpackPlugin 就报错了,没有解决 等我解决了更新一下这个</p><p>真正步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\spring&gt;G:</span><br><span class="line">G:\&gt;<span class="built_in">cd</span> javaScript  //目录自己定啦</span><br><span class="line">G:\JavaScript&gt;mkdir demo</span><br><span class="line">G:\JavaScript\demo&gt;npm init -y</span><br><span class="line">G:\JavaScript\demo&gt;npm install --save-dev webpack   //这里按官方文档来</span><br><span class="line">npm install --save lodash  //工具库,不想用不安装也行,百度看看,挺好用的</span><br><span class="line">npm install webpack-cli -D                          //这是依赖 一定要下载</span><br><span class="line">npx webpack src/index.js --output dist/bundle.js    //一定要加 --output!!</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先环境配置&lt;/p&gt;
&lt;p&gt;node.js环境安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/03a76b2e7e00&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.jianshu.com/
      
    
    </summary>
    
      <category term="node" scheme="http://yoursite.com/categories/node/"/>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>call apply的模拟实现</title>
    <link href="http://yoursite.com/2018/07/30/call%20apply%E7%9A%84%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2018/07/30/call apply的模拟实现/</id>
    <published>2018-07-29T16:00:00.000Z</published>
    <updated>2018-07-31T02:18:12.650Z</updated>
    
    <content type="html"><![CDATA[<h2 id="call-apply的功能类似-先从call说起"><a href="#call-apply的功能类似-先从call说起" class="headerlink" title="call apply的功能类似,先从call说起"></a>call apply的功能类似,先从call说起</h2><p>借助大神的话: call()方法在使用一个指定this值和若干个指定的参数值的前提下调用某个函数和方法(真的难理解)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">value :<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.value)</span><br><span class="line">&#125;</span><br><span class="line">bar.call(foo)</span><br></pre></td></tr></table></figure><p>这里的this就指向foo了 改变JavaScript对象的this就这么简单</p><p>于是是不是就像下面的代码,实现一样的功能</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">    value: <span class="number">1</span>,</span><br><span class="line">    bar: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">foo.bar(); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>这里this就指向foo了, 虽然实现了功能, 但是添加了一个属性, 这是不允许的, 所以要在最后删除这个属性</p><p>分析一下怎么实现类似call的功能:</p><ol><li>将函数设为对象的属性</li><li>指定该函数</li><li>删除该函数</li></ol><p>假如我要自己实现是不是这样的思路?</p><p>那么内部应该是这样的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foo.fun = bar//设置为对象</span><br><span class="line">foo.fun()    //执行函数</span><br><span class="line">delete foo.fun  //删除函数</span><br></pre></td></tr></table></figure><p>fun是对象名字,随便起</p><h3 id="第一版本的模拟call-实现"><a href="#第一版本的模拟call-实现" class="headerlink" title="第一版本的模拟call()实现"></a>第一版本的模拟call()实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.call2 = <span class="function"><span class="keyword">function</span> (<span class="params">context</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//首先获取call函数  用this,因为这里是bar调用了他 所以this指向bar</span></span><br><span class="line">  context.fun = <span class="keyword">this</span>      <span class="comment">//这里将this里面的方法加入到了context里面去了</span></span><br><span class="line">                          <span class="comment">//相当与context变成这样</span></span><br><span class="line">                          <span class="comment">/*context = &#123;</span></span><br><span class="line"><span class="comment">                            value: 1,</span></span><br><span class="line"><span class="comment">                            fun: function ()&#123;</span></span><br><span class="line"><span class="comment">                              console.log(this.value)</span></span><br><span class="line"><span class="comment">                            &#125;</span></span><br><span class="line"><span class="comment">                          &#125;*/</span></span><br><span class="line">  context.fun()</span><br><span class="line">  <span class="keyword">delete</span> context.fun;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">  value:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar.call2(foo)</span><br></pre></td></tr></table></figure><p>后面还要考虑给定参数执行函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">    value: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(name)</span><br><span class="line">    <span class="built_in">console</span>.log(age)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar.call(foo, <span class="string">'kevin'</span>, <span class="number">18</span>);</span><br></pre></td></tr></table></figure><p>这里第一问题 参数不固定怎么办?</p><p>办法:Arguments 对象里面取值,取出第二个到最后一个(这里实现方法是重点),然后放入数组</p><p>还有一点需要注意 当传入null的时候 给他指定为windos</p><h3 id="第二版本"><a href="#第二版本" class="headerlink" title="第二版本"></a>第二版本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.call2 = <span class="function"><span class="keyword">function</span> (<span class="params">context</span>)</span>&#123;</span><br><span class="line">  context.fun = <span class="keyword">this</span> || <span class="built_in">window</span>  <span class="comment">//这里的this是bar函数</span></span><br><span class="line">  <span class="keyword">var</span> datas = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;  <span class="comment">//这里这里默认第一个参数为对象 所以取1后面</span></span><br><span class="line">    datas.push(<span class="string">'arguments['</span> + i + <span class="string">']'</span>); <span class="comment">//最主要就是通过arguments[' + i + ']来过去参数字符串 再使用eval来解开,实现传参</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">eval</span>(<span class="string">'context.fun('</span>+datas+<span class="string">')'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  var foo = &#123;</span></span><br><span class="line"><span class="comment">    value: 1,</span></span><br><span class="line"><span class="comment">    fun: function (name,age)&#123;</span></span><br><span class="line"><span class="comment">      console.log("name---" + name)</span></span><br><span class="line"><span class="comment">      console.log("age---" + age)</span></span><br><span class="line"><span class="comment">      console.log(this.value);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">delete</span> context.fun</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">  value:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"name---"</span>+name)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"age---"</span>+age)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar.call2(foo, <span class="string">'kevin'</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------------</span><br><span class="line">name---kevin</span><br><span class="line">age--<span class="number">-18</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>这里基本已经完成了大致call的核心代码</p><h2 id="后面是apply的是模拟实现代码"><a href="#后面是apply的是模拟实现代码" class="headerlink" title="后面是apply的是模拟实现代码"></a>后面是apply的是模拟实现代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.apply1 = <span class="function"><span class="keyword">function</span> (<span class="params">context,arr</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//let context = Object(context) || window</span></span><br><span class="line">  context.fun = <span class="keyword">this</span></span><br><span class="line">  <span class="keyword">var</span> result;</span><br><span class="line">  <span class="keyword">if</span>(!arr)&#123;   <span class="comment">//假如arr不存在直接执行</span></span><br><span class="line">    result = context.fun()</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> args = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      args.push(<span class="string">'arr['</span>+i+<span class="string">']'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">eval</span>(<span class="string">'context.fun('</span>+args+<span class="string">')'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">  value:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"name---"</span>+name)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"age---"</span>+age)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar.apply1(foo, [<span class="string">'kevin'</span>, <span class="number">18</span>]);</span><br></pre></td></tr></table></figure><p>每次看<a href="https://github.com/mqyqingfeng" target="_blank" rel="noopener">冴羽</a>大神的github都深有启发,看完每个小结都会有一个疑问</p><p>这些大佬是怎么学习的,怎么做到对js理解的如此透彻,….( = = )</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;call-apply的功能类似-先从call说起&quot;&gt;&lt;a href=&quot;#call-apply的功能类似-先从call说起&quot; class=&quot;headerlink&quot; title=&quot;call apply的功能类似,先从call说起&quot;&gt;&lt;/a&gt;call apply的功能类
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="this" scheme="http://yoursite.com/tags/this/"/>
    
  </entry>
  
  <entry>
    <title>从输入一个url到浏览器页面展示都经历了哪些过程</title>
    <link href="http://yoursite.com/2018/07/26/url%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2018/07/26/url解析/</id>
    <published>2018-07-26T08:27:59.000Z</published>
    <updated>2018-07-26T12:16:49.329Z</updated>
    
    <content type="html"><![CDATA[<ol><li>当输入url地址的时候,浏览器首先检查缓存(系统缓存-浏览器缓存),如果有缓存,就直接显示,没有就跳过</li></ol><ol start="2"><li>在发起http请求之前会先进行域名解析,也就是DNS解析,获取ip地址</li></ol><ol start="3"><li>获取到ip后与他进行tcp连接,与浏览器进行三次握手</li></ol><ol start="4"><li>CC握手成功,浏览器向服务器发起http请求,请求数据包</li></ol><ol start="5"><li>服务器接受请求,将数据返回给浏览器</li></ol><ol start="6"><li>浏览器收到http相应</li></ol><ol start="7"><li>读取页面内容,进行浏览器进行渲染,解析html</li></ol><ol start="8"><li>生成Dom树,解析css样式,js的交互代码</li></ol><ol start="9"><li>浏览器与服务器的数据进行交互</li></ol><ol start="10"><li>执行ajax查询</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;当输入url地址的时候,浏览器首先检查缓存(系统缓存-浏览器缓存),如果有缓存,就直接显示,没有就跳过&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;在发起http请求之前会先进行域名解析,也就是DNS解析,获取ip地址&lt;/li&gt;
&lt;/ol&gt;
&lt;o
      
    
    </summary>
    
      <category term="网络编程" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="网络编程" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript数组操作</title>
    <link href="http://yoursite.com/2018/07/26/JavaScript%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/07/26/JavaScript数组操作/</id>
    <published>2018-07-26T08:27:59.000Z</published>
    <updated>2018-07-26T12:49:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript数组操作"><a href="#JavaScript数组操作" class="headerlink" title="JavaScript数组操作"></a>JavaScript数组操作</h1><p> 最近看前端面试题 见到太多数组操作 一定要总结一下</p><ul><li>shift()  删除原数组第一项,  &gt;&gt; 返回删除元素的值,如果数组为空就会返回undefined</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> b = a.shift();</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// [2, 3, 4, 5]  </span></span><br><span class="line"><span class="built_in">console</span>.log(b);  <span class="comment">// 1     //返回被删除的值</span></span><br></pre></td></tr></table></figure><ul><li>unshift()  将参数添加到原数组开头   &gt;&gt;  返回数组的长度</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> b = a.unshift(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">//[0, 1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);  <span class="comment">// 6   //返回数组长度</span></span><br></pre></td></tr></table></figure><ul><li>pop()   删除原数组最后一个，  &gt;&gt;  返回删除元素的值；如果数组为空则返回undefined </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> b = a.pop();</span><br><span class="line"><span class="built_in">console</span>.log(a)  <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line"><span class="built_in">console</span>.log(b)  <span class="comment">//5     //返回删除的值</span></span><br></pre></td></tr></table></figure><ul><li>push  将参数添加到原数组末尾，&gt;&gt;  返回数组的长度 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> b = a.push(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a)  <span class="comment">//[1, 2, 3, 4, 5, 0] </span></span><br><span class="line"><span class="built_in">console</span>.log(b)  <span class="comment">//6     //返回数组的长度</span></span><br></pre></td></tr></table></figure><ul><li>concat  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> b = [<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> c = a.concat(b);</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);  <span class="comment">// [6, 7, 8, 9]</span></span><br><span class="line"><span class="built_in">console</span>.log(c);  <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment">// 之前的concat可用于数组的深拷贝  与空数组进行拼接</span></span><br></pre></td></tr></table></figure><ul><li>splice(start,deleteCount,val1,val2,…):从start位置开始删除deleteCount项，并从该位置起插入val1,val2,… </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> b = a.splice(<span class="number">0</span>,<span class="number">1</span>) <span class="comment">//shift   [2, 3, 4, 5]  </span></span><br><span class="line"><span class="keyword">var</span> c = a.splice(a.length<span class="number">-1</span>,<span class="number">1</span>)  <span class="comment">//pop   [1, 2, 3, 4]</span></span><br><span class="line"><span class="keyword">var</span> d = a.splice(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)  <span class="comment">//unshift  [0, 1, 2, 3, 4, 5]  0开始删除0个 添加 0</span></span><br><span class="line"><span class="keyword">var</span> e = a.splice(a.length,<span class="number">0</span>,<span class="number">6</span>)   <span class="comment">//push   [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"><span class="built_in">console</span>.log(b)         <span class="comment">//  [1] 返回被删除的</span></span><br><span class="line"><span class="built_in">console</span>.log(c)        <span class="comment">//  [5]  返回添加的字符串</span></span><br><span class="line"><span class="built_in">console</span>.log(a)         <span class="comment">//添加为空</span></span><br><span class="line"><span class="built_in">console</span>.log(a)     <span class="comment">//添加为空</span></span><br></pre></td></tr></table></figure><ul><li>reverse()   将数组翻转</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> b = a.reverse()      <span class="comment">//[5, 4, 3, 2, 1]  </span></span><br><span class="line"><span class="built_in">console</span>.log(b)</span><br></pre></td></tr></table></figure><p><code>ps: reverse 翻转  revise 修改  server 服务器 service 服务</code></p><ul><li>sort(orderfunction):按指定的参数对数组进行排序 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.sort();     <span class="comment">//[1, 2, 3, 4, 5]  但是只能完成个位数排序 </span></span><br><span class="line"><span class="built_in">console</span>.log(b)</span><br><span class="line"></span><br><span class="line"><span class="comment">////多位数排序</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">2</span>]; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(a,b);     <span class="comment">//  </span></span><br><span class="line"><span class="keyword">return</span> a-b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> c = a.sort(b);</span><br><span class="line"><span class="built_in">console</span>.log(c)        <span class="comment">//  [2, 3, 4, 5, 12]</span></span><br></pre></td></tr></table></figure><ul><li>slice(start,end):返回从原数组中指定开始下标到结束下标之间的项组成的新数组 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];     <span class="comment">// 数组本身不变</span></span><br><span class="line"><span class="keyword">var</span> b = a.slice(<span class="number">0</span>,<span class="number">2</span>);    <span class="comment">//  [1, 2]  从0开始 返回 两位  </span></span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line"><span class="keyword">var</span> c = a.slice()     <span class="comment">//深拷贝数组</span></span><br></pre></td></tr></table></figure><ul><li>join(separator):将数组的元素变成一个字符串，以()内字符为分隔符，省略的话则用默认用逗号为分隔符 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];  </span><br><span class="line"><span class="keyword">var</span> b = a.join(<span class="string">","</span>);     <span class="comment">//  1,2,3,4,5</span></span><br><span class="line"><span class="built_in">console</span>.log(b)  </span><br><span class="line"><span class="built_in">console</span>.log(a)           <span class="comment">//  [1, 2, 3, 4, 5] 数组本身不变</span></span><br></pre></td></tr></table></figure><ul><li>字符串变数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'1,2,3,4,5'</span>;</span><br><span class="line"><span class="keyword">var</span> b= a.split(<span class="string">","</span>)  <span class="comment">//["1", "2", "3", "4", "5"]</span></span><br><span class="line"><span class="built_in">console</span>.log(b)</span><br></pre></td></tr></table></figure><ul><li>遍历数组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var a = [&quot;一&quot;,&quot;二&quot;,&quot;三&quot;,&quot;四&quot;];</span><br><span class="line">a.forEach(function(data,index,array)&#123;</span><br><span class="line">    console.log(data);           //  data 第一个参数表示当前遍历的值</span><br><span class="line">    console.log(index);          //  index 表示当前遍历的下标</span><br><span class="line">    console.log(array);          //返回数组本身</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>map 转数组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var map = new Map([1,2,3,4,5,6,7,8]);</span><br><span class="line">console.log(map);</span><br></pre></td></tr></table></figure><p>indexOf()  返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">2</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]; </span><br><span class="line">a.indexOf(<span class="number">2</span>); <span class="comment">// 0 </span></span><br><span class="line">a.indexOf(<span class="number">6</span>); <span class="comment">// -1</span></span><br><span class="line">a.indexOf(<span class="number">7</span>); <span class="comment">// 2</span></span><br><span class="line">a.indexOf(<span class="number">8</span>); <span class="comment">// 3</span></span><br><span class="line">a.indexOf(<span class="number">9</span>); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>lastIndexOf()  从数组的后面向前查找,找到一个给定元素的第一个索引，如果不存在，则返回-1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var b = [2, 9, 7, 8, 9]; </span><br><span class="line">b.lastIndexOf(9);     //4  从后往前查找</span><br></pre></td></tr></table></figure><p>toString()  方法返回一个表示该对象的字符串。  数组变字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b = [<span class="number">2</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]; </span><br><span class="line"><span class="built_in">console</span>.log(b.toString())  <span class="comment">//2,9,7,8,9</span></span><br></pre></td></tr></table></figure><p>every() 测试数组的所有元素是否都通过了指定函数的测试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function a(array)&#123;</span><br><span class="line">    return array&gt;10</span><br><span class="line">&#125;</span><br><span class="line">var pass = [1,10,2,4,5,2,3,200].every(a)    / false 测试不通过</span><br><span class="line">console.log(pass)</span><br></pre></td></tr></table></figure><p>some() 方法测试数组中的某些元素是否通过由提供的函数实现的测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function a(array)&#123;</span><br><span class="line">    return array&gt;10</span><br><span class="line">&#125;</span><br><span class="line">var pass = [1,10,2,4,5,2,3,200].every(a)    // true 测试通过</span><br><span class="line">console.log(pass)</span><br></pre></td></tr></table></figure><h4 id="every-是-检索到一个错就返回错-some-是检索到一个正确就返回正确-amp-amp"><a href="#every-是-检索到一个错就返回错-some-是检索到一个正确就返回正确-amp-amp" class="headerlink" title="every 是 检索到一个错就返回错 ||     some 是检索到一个正确就返回正确  &amp;&amp;"></a>every 是 检索到一个错就返回错 ||     some 是检索到一个正确就返回正确  &amp;&amp;</h4><p>filter() 创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ages = [<span class="number">32</span>, <span class="number">33</span>, <span class="number">16</span>, <span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAdult</span>(<span class="params">age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> age &gt;= <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = ages.filter(checkAdult)</span><br><span class="line"><span class="built_in">console</span>.log(b)   <span class="comment">// [32, 33, 40]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaScript数组操作&quot;&gt;&lt;a href=&quot;#JavaScript数组操作&quot; class=&quot;headerlink&quot; title=&quot;JavaScript数组操作&quot;&gt;&lt;/a&gt;JavaScript数组操作&lt;/h1&gt;&lt;p&gt; 最近看前端面试题 见到太多数组操作 一定要
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="Array" scheme="http://yoursite.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>你好 hexo</title>
    <link href="http://yoursite.com/2018/07/26/hexo/"/>
    <id>http://yoursite.com/2018/07/26/hexo/</id>
    <published>2018-07-25T16:00:00.000Z</published>
    <updated>2018-07-26T07:32:38.187Z</updated>
    
    <content type="html"><![CDATA[<h2 id="你好-hexo"><a href="#你好-hexo" class="headerlink" title="你好 hexo!"></a>你好 hexo!</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"新的文章"</span></span><br></pre></td></tr></table></figure><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate//简写 hexo g</span><br></pre></td></tr></table></figure><h3 id="启动本地服务器"><a href="#启动本地服务器" class="headerlink" title="启动本地服务器"></a>启动本地服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server//简写 hexo s</span><br></pre></td></tr></table></figure><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy//简写hexo d</span><br></pre></td></tr></table></figure><p>本次搭建用到的链接</p><p><a href="https://juejin.im/post/5a6ee00ef265da3e4b770ac1" target="_blank" rel="noopener">关于HEXO搭建个人博客</a></p><p><a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">HEXO部署配置</a></p><p><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">HEXO的基本配置</a></p><p>配置完成后面就是使用next主题了</p><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">next文档</a> 这里下载主题请下载稳定版本</p><p>这些文章写的很完成,按步骤来不会出问题,我再总结的话显得相形见绌了(好吧主要是不想重复造轮子)</p><p>渐渐会将github的文章以及博客园的都搬进来</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;你好-hexo&quot;&gt;&lt;a href=&quot;#你好-hexo&quot; class=&quot;headerlink&quot; title=&quot;你好 hexo!&quot;&gt;&lt;/a&gt;你好 hexo!&lt;/h2&gt;&lt;h3 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="next" scheme="http://yoursite.com/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>关于parseInt的学习</title>
    <link href="http://yoursite.com/2018/07/26/%E5%85%B3%E4%BA%8EparseInt%E7%9A%84%E7%A0%94%E7%A9%B6/"/>
    <id>http://yoursite.com/2018/07/26/关于parseInt的研究/</id>
    <published>2018-07-25T16:00:00.000Z</published>
    <updated>2018-07-26T12:48:29.048Z</updated>
    
    <content type="html"><![CDATA[<p>#关于parseInt的学习</p><p>​     前面在看题目的时候 偶然看到 使用parseInt 来进行整数判断 但是这里的parseInt是错误示范</p><p>之后了解了一下 发现这和函数 很有研究</p><p>##先看看 w3c怎么说这个的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">parseInt() 函数可解析一个字符串，并返回一个整数。</span><br><span class="line">string必需。要被解析的字符串。</span><br><span class="line">radix</span><br><span class="line">    可选。表示要解析的数字的基数。该值介于 2 ~ 36 之间。</span><br><span class="line"></span><br><span class="line">    如果省略该参数或其值为 0，则数字将以 10 为基础来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。</span><br><span class="line"></span><br><span class="line">    如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN。</span><br></pre></td></tr></table></figure><p>说实话 虽然我没有比较好的描述,但是觉的他的解释并不好 看不懂</p><h2 id="我们来看看当没有-radix这个参数的时候-parseInt-是如何解析的"><a href="#我们来看看当没有-radix这个参数的时候-parseInt-是如何解析的" class="headerlink" title="我们来看看当没有 radix这个参数的时候 parseInt()是如何解析的"></a>我们来看看当没有 radix这个参数的时候 parseInt()是如何解析的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如果 string 以 &quot;0x&quot; 开头，parseInt() 会把 string 的其余部分解析为十六进制的整数</span><br><span class="line"></span><br><span class="line">如果 string 以 0 开头，那么 ECMAScript v3 允许 parseInt() 的一个实现把其后的字符解析为八进制或十六进制的数字。</span><br><span class="line"></span><br><span class="line">如果 string 以 1 ~ 9 的数字开头，parseInt() 将把它解析为十进制的整数。</span><br></pre></td></tr></table></figure><p> 以及注意事项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注释：只有字符串中的第一个数字会被返回。</span><br><span class="line"></span><br><span class="line">注释：开头和结尾的空格是允许的。</span><br><span class="line"></span><br><span class="line">提示：如果字符串的第一个字符不能被转换为数字，那么 parseFloat() 会返回 NaN。</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&apos;12&apos;,10)    //10</span><br><span class="line">parseInt(11,2,10)    //3 只解析前两位   这里将 11 转化为2禁止 也就是 0011 也就是 3</span><br><span class="line">parseInt(   11   ,2) //3 空格不影响结果</span><br><span class="line">parseInt(&quot;dasas&quot;,2)  // NaN 运算发生错误</span><br></pre></td></tr></table></figure><h2 id="接下来让我们看看-为什么-parseInt不适合判断是否整数"><a href="#接下来让我们看看-为什么-parseInt不适合判断是否整数" class="headerlink" title="接下来让我们看看 为什么 parseInt不适合判断是否整数"></a>接下来让我们看看 为什么 parseInt不适合判断是否整数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">parseInt(0.000001, 10)    // 0</span><br><span class="line">parseInt(0.0000001, 10)   //5 为什么会是5 !</span><br><span class="line">parseInt(10000000000000,10)    //10000000000000 </span><br><span class="line">parseInt(10000000000000000000000000000,10)  // 1</span><br></pre></td></tr></table></figure><p>因为 0.0000001 会被科学计算转化为1e-7 于是parseInt就进行识别 1 认识 e不认识 返回 10进制的1 结果为 1 </p><p>10000000000000000000000000000  =&gt; 1e+28 所以为1</p><p>所有 这里数字过小 过大就不再适合 使用parseInt来进行判断</p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">console.log(parseInt(1/0,19))      //18</span><br><span class="line">console.log(parseInt(false,16))    //250</span><br><span class="line">console.log(parseInt(parseInt,16)) //15</span><br><span class="line">console.log(parseInt(&apos;0x10&apos;))      //16</span><br><span class="line">console.log(parseInt(&apos;10&apos;,2))      //2</span><br></pre></td></tr></table></figure><p> 这是我在别人博客看到的 这些都会了 parseInt就没问题了 </p><p>##解释</p><p>####console.log(parseInt(1/0,19)) </p><p> 首先计算 1/0 多少 控制台输出 <code>Infinity</code>  代码就变成了 </p><p><code>parseInt(&quot;Infinity&quot;,19)</code></p><p>19进制 ( 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,g,h,i )</p><p>进行解析 I 存在 19进制 解析为18 n不存在 直接返回  所以  = 18</p><p>####console.log(parseInt(false,16)) </p><p>18进制 (0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f）</p><p>false parseInt不认识 于是 逐个解析</p><p>f 存在  a 存在 l不认识返回 16进制的fa   = &gt; 10进制的 250</p><p>####console.log(parseInt(parseInt,16))  </p><p>和上面同理 parseInt被解析成为字符串</p><p>####console.log(parseInt(‘0x10’))  </p><p>没有第二参数 默认 10进制 0x 表示 16进制 0x10为 10 10进制为   =&gt; 16</p><p>####console.log(parseInt(‘10’,2))</p><p>10 二进制 解析  =&gt; 2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#关于parseInt的学习&lt;/p&gt;
&lt;p&gt;​     前面在看题目的时候 偶然看到 使用parseInt 来进行整数判断 但是这里的parseInt是错误示范&lt;/p&gt;
&lt;p&gt;之后了解了一下 发现这和函数 很有研究&lt;/p&gt;
&lt;p&gt;##先看看 w3c怎么说这个的&lt;/p&gt;
&lt;f
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="parselnt" scheme="http://yoursite.com/tags/parselnt/"/>
    
  </entry>
  
  <entry>
    <title>解决8080端口占用问题</title>
    <link href="http://yoursite.com/2018/07/26/%E8%A7%A3%E5%86%B38080%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/26/解决8080端口占用问题/</id>
    <published>2018-07-25T16:00:00.000Z</published>
    <updated>2018-07-26T12:44:04.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决8080端口占用问题"><a href="#解决8080端口占用问题" class="headerlink" title="解决8080端口占用问题"></a>解决8080端口占用问题</h1><p>这一定是最简单的办法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat   -ano|findstr  8080</span><br></pre></td></tr></table></figure><blockquote><p>说明：查看占用8080端口的进程,这里获取进程号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill  /pid  xxxxx  /f</span><br></pre></td></tr></table></figure><blockquote><p>说明:  运行windows自带taskkill命令，将上面显示的进程号结束掉。</p></blockquote><p>这样比百度的好用,最起码不用找</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;解决8080端口占用问题&quot;&gt;&lt;a href=&quot;#解决8080端口占用问题&quot; class=&quot;headerlink&quot; title=&quot;解决8080端口占用问题&quot;&gt;&lt;/a&gt;解决8080端口占用问题&lt;/h1&gt;&lt;p&gt;这一定是最简单的办法&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="开发技巧" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="开发技巧" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript深入之参数按值传递</title>
    <link href="http://yoursite.com/2018/07/15/JavaScript%E6%B7%B1%E5%85%A5%20-%20%E5%8F%82%E6%95%B0%E6%8C%89%E5%80%BC%E4%BC%A0%E9%80%92/"/>
    <id>http://yoursite.com/2018/07/15/JavaScript深入 - 参数按值传递/</id>
    <published>2018-07-14T16:00:00.000Z</published>
    <updated>2018-07-31T00:38:52.080Z</updated>
    
    <content type="html"><![CDATA[<p>在《JavaScript高级程序设计》第三版 4.1.3，讲到传递参数： </p><p>ECMAscript中所有函数的参数都是按值传递</p><h3 id="按值传递"><a href="#按值传递" class="headerlink" title="按值传递"></a>按值传递</h3><blockquote><p>也就是,把函数外部的值复制给函数内部的参数,就和把值从一个变量复制到另一个变量一样</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">v</span>) </span>&#123;</span><br><span class="line">    v = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(v); <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line">foo(value);</span><br><span class="line"><span class="built_in">console</span>.log(value) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>当传递value给函数foo的时候,相当于拷贝一份value给foo假设拷贝的那份叫v,函数中修改的都是v,不会一项原来的value值</p><h3 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h3><p>按值传递里面的拷贝虽然好理解 但是当值是一个复杂的数据结构的时候,拷贝就会产生性能问题</p><p>所以还有另外的传递方式叫做按<strong>引用传递</strong></p><p>所谓按引用传递,就是传递对象的引用,函数内部对参数的任何改变都会影响该对象的值,因为两者引用的是同一个对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">      value : <span class="number">1</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">let</span> foo = <span class="function">(<span class="params">o</span>)=&gt;</span> &#123;</span><br><span class="line">      o.value = <span class="number">2</span>;</span><br><span class="line">      <span class="built_in">console</span>.log(o.value);</span><br><span class="line">    &#125;</span><br><span class="line">    foo(obj)</span><br><span class="line">    <span class="built_in">console</span>.log(obj.value);</span><br></pre></td></tr></table></figure><p>这里产生了一个疑问?</p><p>红宝书都说了 ECMAScript 中所有函数的参数都是按值传递的，这怎么能按”引用传递”成功呢？ </p><h3 id="我们看第三个例子"><a href="#我们看第三个例子" class="headerlink" title="我们看第三个例子"></a>我们看第三个例子</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    value: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    o = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(o); <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line">foo(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.value) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>如果 JavaScript 采用的是引用传递，外层的值也会被修改呐，这怎么又没被改呢？所以真的不是引用传递吗？ </p><p>这就要讲到其实还有第三种传递方式，叫按共享传递。</p><p>而共享传递是指，在传递对象的时候，传递对象的引用的副本。</p><p>关键点:</p><blockquote><p>运算符<code>=</code>就是<strong>创建或修改</strong>变量在内存中的指向.<br>初始化变量时为创建,重新赋值即为修改.</p></blockquote><p>为了解释上面的共享传递 这里在看一个例子摸清楚内存中的分布</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;<span class="attr">b</span>: <span class="number">1</span>&#125;;<span class="comment">// a = &#123;b: 1&#125;</span></span><br><span class="line"><span class="keyword">var</span> c = a;<span class="comment">// c = &#123;b: 1&#125;</span></span><br><span class="line">a = <span class="number">2</span>;<span class="comment">// 重新赋值a</span></span><br><span class="line"><span class="built_in">console</span>.log(c);<span class="comment">// &#123;b: 1&#125;</span></span><br></pre></td></tr></table></figure><ol><li>创建变量a指向对象{b:1}</li><li>创建变量c指向对象{b:1}</li><li>a又重新指向常量2</li></ol><p>但是这时候c依旧指向对象{b:1}</p><p>这样我们回头看第一个例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> v = value; <span class="comment">// 创建变量v指向value所指向的值</span></span><br><span class="line">    v = <span class="number">2</span>;<span class="comment">// v重新指向另外的值</span></span><br><span class="line">    <span class="built_in">console</span>.log(v); <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line">foo(value);</span><br><span class="line"><span class="built_in">console</span>.log(value) <span class="comment">// 1,value从始至终都未改变指向.</span></span><br></pre></td></tr></table></figure><p>现在吧第一个例子修改成对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;<span class="attr">b</span>: <span class="number">1</span>&#125;;<span class="comment">// a = &#123;b: 1&#125;</span></span><br><span class="line"><span class="keyword">var</span> c = a;<span class="comment">// c = &#123;b: 1&#125;</span></span><br><span class="line">a.b = <span class="number">2</span>;<span class="comment">// 重新赋值对象a中的属性b</span></span><br><span class="line"><span class="built_in">console</span>.log(c);<span class="comment">// &#123;b: 2&#125;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>栈</th><th>堆</th><th>常量区</th></tr></thead><tbody><tr><td>a,c</td><td>[object]</td><td></td></tr><tr><td>b</td><td></td><td>1</td></tr></tbody></table><p>执行完<code>a.b = 2</code>后: </p><table><thead><tr><th>栈</th><th>堆</th><th>常量区</th></tr></thead><tbody><tr><td>a,c</td><td>[]object</td><td></td></tr><tr><td>b</td><td></td><td>2</td></tr></tbody></table><blockquote><p>a,c从始至终都没有改变指向,变的是b而已</p></blockquote><p>现在再看第二个例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">   value: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">var</span> o = obj;</span><br><span class="line">   o.value = <span class="number">2</span>;<span class="comment">// 变量value改变了指向,而o并未改变</span></span><br><span class="line">   <span class="built_in">console</span>.log(o.value); <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line">foo(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.value) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><p>所以 js始终是按值传递,在这里称他为共享传递</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在《JavaScript高级程序设计》第三版 4.1.3，讲到传递参数： &lt;/p&gt;
&lt;p&gt;ECMAscript中所有函数的参数都是按值传递&lt;/p&gt;
&lt;h3 id=&quot;按值传递&quot;&gt;&lt;a href=&quot;#按值传递&quot; class=&quot;headerlink&quot; title=&quot;按值传递&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue路由钩子 afterEach beforeEach区别</title>
    <link href="http://yoursite.com/2018/07/14/vue%20%E8%B7%AF%E7%94%B1%E9%92%A9%E5%AD%90afterEach%20beforeEach/"/>
    <id>http://yoursite.com/2018/07/14/vue 路由钩子afterEach beforeEach/</id>
    <published>2018-07-13T16:00:00.000Z</published>
    <updated>2018-07-31T00:53:54.074Z</updated>
    
    <content type="html"><![CDATA[<p>使用vue已经有一段是时间了,这不断的写项目里面,基本上清楚了vue的这种与jq完成不一样的思想,越是研究越是感觉作者之强大,对vue SPA单页面里面最常用的vue-router组件,今天就谈谈这个,我使用的经验</p><p>​    vue-router作为vue里面最基础的服务,学习一段时间,对遇到的需求进行一些总结</p><p>使用vue-cli作为开发前提 vue-router已经配置好了</p><p>路由写法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> routes: [</span><br><span class="line">   &#123;</span><br><span class="line">       path: &apos;/cart&apos;,</span><br><span class="line">       name: &apos;cart&apos;,</span><br><span class="line">       component: cart,</span><br><span class="line">       meta :&#123; title: &quot;购物车&quot;&#125;//用于给定网页名</span><br><span class="line">   &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="vue-router-的路由跳转的方法"><a href="#vue-router-的路由跳转的方法" class="headerlink" title="vue-router 的路由跳转的方法"></a>vue-router 的路由跳转的方法</h3><p>第一种 : 编程式的导航</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/&quot; tag=&quot;p&quot;&gt;耳机频道&lt;/router-link&gt;</span><br><span class="line">//to是一个prop.指定需要跳转的路径,也可以使用v-bind动态设置</span><br><span class="line">//tag可以指定渲染成标签,默认是a标签</span><br><span class="line">&lt;router-link to=&quot;/&quot; replace&gt;跳转回去&lt;/router-link&gt;   </span><br><span class="line">//这样的写法是不会留下历史痕迹,回退键无效</span><br><span class="line">&lt;router-link :to=&quot;&#123; name: &apos;product&apos;, params: &#123; id : 1 &#125;&#125;&quot;&gt;User&lt;/router-link&gt;</span><br><span class="line">// /product/1</span><br></pre></td></tr></table></figure><p>第二种 : 函数式的导航</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//这里假设 我要跳转product页面并且附带参数id  </span><br><span class="line">//这里定义好了list.id 就是 动态的值</span><br><span class="line">this.$router.push(&apos;./product/&apos; + list.id)// 字符串的方式进行描述</span><br><span class="line">this.$router.push(&#123;name : &apos;product&apos;,params: &#123; id : list.id &#125;&#125;)  // 命名的路由的方式进行描述</span><br><span class="line">this.$router.push(&#123; path: `/product/$&#123;list.id&#125;` &#125;) // 直接定义path类似第一种</span><br><span class="line">//比较常用的跳转路由的方法</span><br><span class="line">//假如是带查询参数</span><br><span class="line">router.push(&#123; path: &apos;product&apos;, query: &#123; id: list.id &#125;&#125;)            // /product?id=1</span><br></pre></td></tr></table></figure><p> 这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，则回到之前的 URL。 </p><p>当你点击 <code>&lt;router-link&gt;</code> 时，这个方法会在内部调用，所以说，点击 <code>&lt;router-link :to=&quot;...&quot;&gt;</code> 等同于调用 <code>router.push(...)</code>。 </p><p><strong>值得注意的一点是,如果提供了 path，params 的配置将不会生效</strong> </p><p>还有一些方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">router.replace//它不会向 history 添加新记录，而是跟它的方法名一样 —— 替换掉当前的 history 记录</span><br><span class="line">router.go(1) //在浏览器记录里面前进一步,等于history.forward()</span><br><span class="line">router.go(-1)//后退一步记录，等同于 history.back()</span><br><span class="line">router.go(n)//浏览器记录前进3步</span><br></pre></td></tr></table></figure><p>基本使用大概就这么多<br>还有 命名视图 路由重定向 等等需要的请看官网</p><p>基本知识大概就这么多 </p><h3 id="现在说说正题-afterEach-beforeEach这两个导航守卫的区别"><a href="#现在说说正题-afterEach-beforeEach这两个导航守卫的区别" class="headerlink" title="现在说说正题 afterEach beforeEach这两个导航守卫的区别"></a>现在说说正题 afterEach beforeEach这两个导航守卫的区别</h3><p>正如其名，<code>vue-router</code> 提供的导航守卫主要用来通过跳转或取消的方式守卫导航。有多种机会植入路由导航过程中：全局的, 单个路由独享的, 或者组件级的。</p><p>记住<strong>参数或查询的改变并不会触发进入/离开的导航守卫</strong>。</p><p>在全局守卫里面</p><p>beforeEach 全局前置守卫 </p><p>当一个导航触发时，全局前置守卫按照创建顺序调用。 </p><p>每个守卫方法接收三个参数：</p><ul><li><strong>to: Route</strong>: 即将要进入的目标 <a href="https://router.vuejs.org/zh/api/#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1" target="_blank" rel="noopener">路由对象</a></li><li><strong>from: Route</strong>: 当前导航正要离开的路由</li><li><strong>next: Function</strong>: 一定要调用该方法来 <strong>resolve</strong> 这个钩子。执行效果依赖 <code>next</code> 方法的调用参数。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(to);    <span class="comment">//即将要进入的路由对象</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="keyword">from</span>);  <span class="comment">//当前导航要离开的路由对象</span></span><br><span class="line">  </span><br><span class="line">   next();             <span class="comment">//调用该方法,才能进入下一个钩子</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//这样写就可以明显的看出每个参数的意义</span></span><br></pre></td></tr></table></figure><p><strong>next()</strong>: 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 <strong>confirmed</strong> (确认的)。 </p><p><strong>next(false)</strong>: 中断当前的导航。如果浏览器的 URL 改变了 (可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 <code>from</code> 路由对应的地址。 </p><p><strong>next(‘/‘) 或者 next({ path: ‘/‘ })</strong>: 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 <code>next</code> 传递任意位置对象，且允许设置诸如 <code>replace: true</code>、<code>name: &#39;home&#39;</code> 之类的选项以及任何用在 <a href="https://router.vuejs.org/zh/api/#to" target="_blank" rel="noopener"><code>router-link</code> 的 <code>to</code> prop</a> 或 <a href="https://router.vuejs.org/zh/api/#router-push" target="_blank" rel="noopener"><code>router.push</code></a> 中的选项。 </p><p><strong>确保要调用 next 方法，否则钩子就不会被 resolved</strong> </p><p>afterEach 全局后置钩子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router.afterEach((to, from) =&gt; &#123;</span><br><span class="line">  // ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>然而和守卫不同的是，这些钩子不会接受 <code>next</code> 函数也不会改变导航本身</p><p>从使用的角度来说 前置钩子更加常用,比如<strong>登录验证</strong> 以及给<strong>Vue单页面引用规定网页名</strong>等等,这些案例我的github里面有,如果想了解一下思路可以看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach((to,from,next) =&gt; &#123;</span><br><span class="line">  if(to.meta.title) &#123;</span><br><span class="line">    document.title = to.meta.title;    //在路由里面写入的meta里面的title字段</span><br><span class="line">  &#125;</span><br><span class="line">  next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p> <a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E8%B7%AF%E7%94%B1%E7%8B%AC%E4%BA%AB%E7%9A%84%E5%AE%88%E5%8D%AB" target="_blank" rel="noopener">组件内的守卫</a>请看官网的例子</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用vue已经有一段是时间了,这不断的写项目里面,基本上清楚了vue的这种与jq完成不一样的思想,越是研究越是感觉作者之强大,对vue SPA单页面里面最常用的vue-router组件,今天就谈谈这个,我使用的经验&lt;/p&gt;
&lt;p&gt;​    vue-router作为vue里面
      
    
    </summary>
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="vue-router" scheme="http://yoursite.com/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>cmder添加到右键菜单 以及一些问题</title>
    <link href="http://yoursite.com/2018/05/14/cmder%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/05/14/cmder的一些问题/</id>
    <published>2018-05-13T16:00:00.000Z</published>
    <updated>2018-07-30T02:31:31.410Z</updated>
    
    <content type="html"><![CDATA[<p>之前之中用 win自带的cmd 说实话 不太好用</p><p>现在使用 cmder 功能更加强大 更加美观 有Linux终端的感觉</p><h3 id="1-启动Cmder"><a href="#1-启动Cmder" class="headerlink" title="1.启动Cmder"></a>1.<strong>启动Cmder</strong></h3><p>因为她是即压即用的存在，所以点击<code>Cmder.exe</code>即可运行。很显然这般打开她，不怎么快捷，即便用<code>Listary</code>高效搜索到她，然后点击，我们可以这样做：</p><p>###2.<strong>添加 cmder 到右键菜单</strong></p><p><strong>打开一个管理员权限终端：</strong>输入 Ctrl + t，或者点击下面控制条的绿色加号，勾选 Run as administrator</p><p><img src="http://on7r0tqgu.bkt.clouddn.com/FrN0AD6d3lnQSwhCwxYWQfuRmd7F.png" alt=""></p><p>这就打开了一个管理员权限的终端, 在里面输入上述语句，就可在每个文件夹右键菜单中点击 <code>Cmder here</code>唤起Cmder，方便快捷。</p><p>不用打开文件夹就能打Cmder,并进入该目录;爽。</p><h3 id="还有可能遇到"><a href="#还有可能遇到" class="headerlink" title="还有可能遇到"></a>还有可能遇到</h3><p>1、提示clink.lua文件找不到</p><p>cmder\vendor\clink\clink.lua: No such file or direct<br>原因分析：<br>这个是因为你的cmder的路径中有中文，将cmder文件夹移动到没有中文的目录下再重新打开，一切就恢复正常了。</p><p>2、ls命令中文路径/文件名乱码</p><p>win+ctrl+p打开Settings<br>在Settings &gt; Startup &gt; Environment里添加：set LANG=zh_CN.UTF8</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前之中用 win自带的cmd 说实话 不太好用&lt;/p&gt;
&lt;p&gt;现在使用 cmder 功能更加强大 更加美观 有Linux终端的感觉&lt;/p&gt;
&lt;h3 id=&quot;1-启动Cmder&quot;&gt;&lt;a href=&quot;#1-启动Cmder&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="开发技巧" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="cmder" scheme="http://yoursite.com/tags/cmder/"/>
    
  </entry>
  
  <entry>
    <title>mongdb命令</title>
    <link href="http://yoursite.com/2018/05/10/mongdb%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/10/mongdb基础命令/</id>
    <published>2018-05-09T16:00:00.000Z</published>
    <updated>2018-07-30T02:29:47.948Z</updated>
    
    <content type="html"><![CDATA[<p>cls 清屏</p><p>show dbs   //显示当前所有数据库</p><p>use 数据库名   //进入指定数据库  如果不存在就创建一个</p><p>db   //显示当前数据库</p><p>show collections  //显示数据库中的合集</p><p> 给school表里面出入数据 student </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; use school</span><br><span class="line">switched to db school</span><br><span class="line">&gt; db</span><br><span class="line">school</span><br><span class="line">&gt; db.student.insert(&#123;id:&quot;01&quot;, name:&quot;admin&quot;, sex:&quot;boy&quot;&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><p>####插入数据</p><p>db.student.insert({})</p><p>####插入多条数据</p><p>db.student.insert([{},{}]) </p><p>####查询数据</p><p>db.student.find()</p><p>####条件查询数据</p><p>db.student.find({name: ‘admin’})   //查询集合student里面 名字是admin的数据</p><p>db.student.findOne({name: ‘admin’})</p><p>####更新数据</p><p>db.student.update({name: ‘’张三’},{age: ‘20’})    第一个参数是 查询的值 第二个参数是改变的值 </p><p>但是这里没有添加修饰符 <strong>将全部内容修改</strong></p><p>db.student.update({‘age’: ‘女’}, { $set : {id:’02’} })<br>$ .set 更新操作符</p><p>####增加字段</p><p>db.student.update({‘age’: ‘女’}, { $set : {lang:’java’} })   直接写就是添加</p><p>####删除字段</p><p>db.student.update({‘age’: ‘女’},{ $unset : {score: ‘admin’} }) </p><p>$.unzet 删除字段</p><h4 id="更新多条数据"><a href="#更新多条数据" class="headerlink" title="更新多条数据"></a>更新多条数据</h4><p>db.student.updateMany({name: ‘admin’},{ $set : {name: ‘one’} })</p><p>updateMany方法</p><p>使用update也可以,但是要加参数 </p><p>db.student.update( { name :  ‘one’ } , { $set : { name : ‘admin’ } } , { multi : true } )</p><p><strong>multi : true</strong></p><p>删除数据</p><p>db.student.remove({age:’女’})</p><p>删除age: ‘女’的所有数据</p><p>db.student.remove({name: ‘local’},true)</p><p>删除name为local的数据 但是只删除一条</p><p>向内嵌文档 数组里面加数据</p><p>$push 无差别添加</p><p>db.college.update({name:’html5’},{$push:{“classes.base”:’微信小程序’}})</p><p>$addToSet 存在就不添加 不存在就添加</p><p>db.college.update({name:’html5’},{$addToSet:{“classes.base”:”web移动端”}})</p><p>$pop 删除内嵌文档里面的一条数据</p><p>db.college.update({name:’html5’},{$pop:{“classes.base”:”web移动端”}})</p><p>删除数据库</p><p>db.college.remove({})</p><p>db.college.drop({})</p><p>插入10000条数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr = [];</span><br><span class="line">for(var i=0;i&lt;10000;i++)&#123;</span><br><span class="line">  arr.push(&#123;counter:i&#125;)</span><br><span class="line">&#125;</span><br><span class="line">db.college.insert(arr);</span><br></pre></td></tr></table></figure><p>查询counter为666的文档</p><p>db.college.find({counter:665})</p><p>查询counter小于666的文档</p><p>db.college.find({counter:{$lt:666}})</p><p>$lt 小于查询符</p><p>查询counter大于4900的文档</p><p>db.college.find({counter:{$gt:4900}})</p><p>查询counter在60 70之间的文档</p><p>db.college.find({counter:{\$gt:60,$lt: 70}})</p><p>查询集合的前10行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.college.find().limit(10)</span><br></pre></td></tr></table></figure><p>查询集合 10 - 20 条</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.college.find().skip(10).limit(10)  10开始 插 10个</span><br></pre></td></tr></table></figure><h4 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h4><p>var cno = db.user.findOne({cname:’html学院’}).cno; 变量储存<br>db.section.find({cno:cno})   基于变量查询</p><p>查询wages小于13000 大于13000的所有集合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.section.find(&#123; $or : [ &#123; wages: &#123;$lte:&quot;13000&quot;&#125;&#125;,&#123;wages: &#123;$gte:&quot;13000&quot;&#125;&#125; ] &#125; )</span><br></pre></td></tr></table></figure><p>给所有wanges小于13000的增加1000</p><p>db.section.updateMany({wages:{\$lte: 13000}},{$inc:{wages:1000}})</p><p>指定文档的排序规则 例如 按wages为升序db.getCollection(‘section’).find({}).sort({wages:1})</p><p>1 为升序 -1 为降序</p><p>按wages为升序 假如 wages相同 就按name排序</p><p>db.getCollection(‘section’).find({}).sort({wages:-1,name:-1})</p><p>索引查询某一列</p><p>只显示wages这一列</p><p>db.getCollection(‘section’).find({},{wages:1})</p><p>显示wages,name 字段</p><p>db.getCollection(‘section’).find({},{wages:1,name:1})</p><p>只不显示wages这一列</p><p>db.getCollection(‘section’).find({},{wages:0})</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;cls 清屏&lt;/p&gt;
&lt;p&gt;show dbs   //显示当前所有数据库&lt;/p&gt;
&lt;p&gt;use 数据库名   //进入指定数据库  如果不存在就创建一个&lt;/p&gt;
&lt;p&gt;db   //显示当前数据库&lt;/p&gt;
&lt;p&gt;show collections  //显示数据库中的合集&lt;/
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mongdb" scheme="http://yoursite.com/tags/mongdb/"/>
    
  </entry>
  
  <entry>
    <title>node 同步/异步写入文件</title>
    <link href="http://yoursite.com/2018/05/06/noed%E5%BC%82%E6%AD%A5%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2018/05/06/noed异步写入文件实例/</id>
    <published>2018-05-05T16:00:00.000Z</published>
    <updated>2018-07-31T00:35:17.115Z</updated>
    
    <content type="html"><![CDATA[<p>题外话 : 也不知道现在学node是对是错 看招聘都要vue react</p><p> vue还行 虽然原理不懂,但是基本项目还能写 react还没有接触过,心里忐忑不知道能不能找到工作啊……</p><p><strong>以下代码在node环境下面都运行</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 引入文件</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 打开文件</span></span><br><span class="line"><span class="keyword">let</span> fd = fs.openSync(<span class="string">"./1.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. 写入文件</span></span><br><span class="line">fs.writeFileSync(fd, <span class="string">"今天天气好"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 保存文件 并且退出</span></span><br><span class="line">fs.closeSync(fd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//以上是node的同步文件操作,下面是异步的文件操作</span></span><br><span class="line"></span><br><span class="line">fs.open(<span class="string">'./异步操作txt'</span>, <span class="string">'a'</span>, (err,fd) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'异步'</span>);</span><br><span class="line">  <span class="comment">//判断时候出错</span></span><br><span class="line">  <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">    <span class="comment">//写入文件</span></span><br><span class="line">    fs.writeFile(fd, <span class="string">'这是异步写入'</span>,(err) =&gt; &#123;</span><br><span class="line">      <span class="comment">//异步回调判断时候写入成功</span></span><br><span class="line">      <span class="keyword">if</span>(!err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'写入成功'</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'出错了'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//关闭的时候异步判断时候关闭成功</span></span><br><span class="line">      fs.close(fd, (err) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'文件流关闭'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> err;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="fs-open-path-flags-mode-callback"><a href="#fs-open-path-flags-mode-callback" class="headerlink" title="fs.open(path, flags[, mode], callback)"></a>fs.open(path, flags[, mode], callback)</h4><p>关于flags 对文件操作的选项</p><ul><li><p><code>&#39;r&#39;</code> - 以读取模式打开文件。如果文件不存在则发生异常。</p></li><li><p><code>&#39;r+&#39;</code> - 以读写模式打开文件。如果文件不存在则发生异常。</p></li><li><p><code>&#39;rs+&#39;</code> - 以同步读写模式打开文件。命令操作系统绕过本地文件系统缓存。</p><p>这对 NFS 挂载模式下打开文件很有用，因为它可以让你跳过潜在的旧本地缓存。 它对 I/O 的性能有明显的影响，所以除非需要，否则不要使用此标志。</p><p>注意，这不会使 <code>fs.open()</code> 进入同步阻塞调用。 如果那是你想要的，则应该使用 <code>fs.openSync()</code>。</p></li><li><p><code>&#39;w&#39;</code> - 以写入模式打开文件。文件会被创建（如果文件不存在）或截断（如果文件存在）。</p></li><li><p><code>&#39;wx&#39;</code> - 类似 <code>&#39;w&#39;</code>，但如果 <code>path</code> 存在，则失败。</p></li><li><p><code>&#39;w+&#39;</code> - 以读写模式打开文件。文件会被创建（如果文件不存在）或截断（如果文件存在）。</p></li><li><p><code>&#39;wx+&#39;</code> - 类似 <code>&#39;w+&#39;</code>，但如果 <code>path</code> 存在，则失败。</p></li><li><p><code>&#39;a&#39;</code> - 以追加模式打开文件。如果文件不存在，则会被创建。</p></li><li><p><code>&#39;ax&#39;</code> - 类似于 <code>&#39;a&#39;</code>，但如果 <code>path</code> 存在，则失败。</p></li><li><p><code>&#39;a+&#39;</code> - 以读取和追加模式打开文件。如果文件不存在，则会被创建。</p></li><li><p><code>&#39;ax+&#39;</code> - 类似于 <code>&#39;a+&#39;</code>，但如果 <code>path</code> 存在，则失败。3</p><p><code>callback</code>  回调有两个参数 <code>(err, fd)</code>。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题外话 : 也不知道现在学node是对是错 看招聘都要vue react&lt;/p&gt;
&lt;p&gt; vue还行 虽然原理不懂,但是基本项目还能写 react还没有接触过,心里忐忑不知道能不能找到工作啊……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下代码在node环境下面都运行&lt;/strong
      
    
    </summary>
    
      <category term="node" scheme="http://yoursite.com/categories/node/"/>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>GET POST 请求的详细区别</title>
    <link href="http://yoursite.com/2018/05/05/get%20post/"/>
    <id>http://yoursite.com/2018/05/05/get post/</id>
    <published>2018-05-04T16:00:00.000Z</published>
    <updated>2018-08-05T10:03:22.727Z</updated>
    
    <content type="html"><![CDATA[<p>#GET POST 请求的详细区别</p><p>前言: 作为最常见的请求方式 在面试很有可能会被问到 所以在这里做一个简单总结</p><h4 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h4><ul><li>get方法向页面请求发送参数</li><li>地址和参数之间用?进行分割 例如 localhost:80/download.html?fileName=+”fileName”+”&amp;filePath=”+filePath</li><li>字符串会显示在地址栏的url上面 不安全 敏感信息 不可以用get (例如登录)</li><li>get方法有大小限制 ,请求字符最多只能是1024字节(更新:<strong>应该是浏览器输入框限制的长度</strong>)</li><li>get请求会被缓存</li><li>get请求会被保存在浏览器记录里面</li><li>get请求可以添加进书签</li><li>get请求的编码类型为 application/x-www-from-urlencoded</li><li>只允许 ASCII数据类型 不允许二进制流(上传没办法使用get)</li><li>点击刷新 ,get请求数据不变 页面不会有变化</li><li><p>get请求主要是用来获取数据</p><p>POST</p></li><li><p>post方法想页面请发带参数</p></li><li>使用post方法时,查询字符串在post信息里面单独存在 和HTTP一起发送到服务器</li><li>编码类型 为application/x-www-form-urlencoded 二进制为 multipart</li><li>没有历史记录</li><li>参数类型没有限制 可以是字符串 也可以是二进制流</li><li>数据不会被显示在地址栏,也不会缓存下来或者保存在浏览记录里面,所以post相对get来说比较安全,但也不是最安全的方式,如传输敏感数据还要使用加密方式传输</li><li>post传输的数据量大 可以达到2M,而get因为url长度的限制</li></ul><p>总地来说 </p><p><strong>POST适合将数据传送到服务器</strong></p><p><strong>GET 适合从服务器端获取数据</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#GET POST 请求的详细区别&lt;/p&gt;
&lt;p&gt;前言: 作为最常见的请求方式 在面试很有可能会被问到 所以在这里做一个简单总结&lt;/p&gt;
&lt;h4 id=&quot;GET&quot;&gt;&lt;a href=&quot;#GET&quot; class=&quot;headerlink&quot; title=&quot;GET&quot;&gt;&lt;/a&gt;GET&lt;/
      
    
    </summary>
    
      <category term="面试题" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="http" scheme="http://yoursite.com/tags/http/"/>
    
  </entry>
  
</feed>
